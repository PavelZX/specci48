ARM GAS  /tmp/ccDaY04z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"core.c"
  15              		.section	.text.SPIx_WriteF,"ax",%progbits
  16              		.align	1
  17              		.global	SPIx_WriteF
  18              		.thumb
  19              		.thumb_func
  21              	SPIx_WriteF:
  22              		@ args = 0, pretend = 0, frame = 0
  23              		@ frame_needed = 0, uses_anonymous_args = 0
  24              		@ link register save eliminated.
  25 0000 034B     		ldr	r3, .L6
  26 0002 1B68     		ldr	r3, [r3]
  27              	.L2:
  28 0004 9A68     		ldr	r2, [r3, #8]
  29 0006 9207     		lsls	r2, r2, #30
  30 0008 FCD5     		bpl	.L2
  31 000a 1873     		strb	r0, [r3, #12]
  32 000c 7047     		bx	lr
  33              	.L7:
  34 000e 00BF     		.align	2
  35              	.L6:
  36 0010 00000000 		.word	hspi1
  38              		.section	.text.SPIx_ReadF,"ax",%progbits
  39              		.align	1
  40              		.global	SPIx_ReadF
  41              		.thumb
  42              		.thumb_func
  44              	SPIx_ReadF:
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 0, uses_anonymous_args = 0
  47              		@ link register save eliminated.
  48 0000 034B     		ldr	r3, .L12
  49 0002 1B68     		ldr	r3, [r3]
  50              	.L9:
  51 0004 9A68     		ldr	r2, [r3, #8]
  52 0006 D207     		lsls	r2, r2, #31
  53 0008 FCD5     		bpl	.L9
  54 000a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  55 000c 0370     		strb	r3, [r0]
  56 000e 7047     		bx	lr
  57              	.L13:
  58              		.align	2
  59              	.L12:
  60 0010 00000000 		.word	hspi1
ARM GAS  /tmp/ccDaY04z.s 			page 2


  62              		.section	.text.dmaSendCmdCont,"ax",%progbits
  63              		.align	1
  64              		.global	dmaSendCmdCont
  65              		.thumb
  66              		.thumb_func
  68              	dmaSendCmdCont:
  69              		@ args = 0, pretend = 0, frame = 16
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
  72 0002 204B     		ldr	r3, .L36
  73 0004 4FF08062 		mov	r2, #67108864
  74 0008 8DF80700 		strb	r0, [sp, #7]
  75 000c A3F58063 		sub	r3, r3, #1024
  76 0010 C3F81024 		str	r2, [r3, #1040]
  77 0014 4FF40022 		mov	r2, #524288
  78 0018 1A61     		str	r2, [r3, #16]
  79 001a 1B4B     		ldr	r3, .L36+4
  80 001c 1A68     		ldr	r2, [r3]
  81 001e C823     		movs	r3, #200
  82              	.L15:
  83 0020 9168     		ldr	r1, [r2, #8]
  84 0022 0906     		lsls	r1, r1, #24
  85 0024 04D5     		bpl	.L17
  86 0026 1BB1     		cbz	r3, .L17
  87 0028 013B     		subs	r3, r3, #1
  88 002a F9E7     		b	.L15
  89              	.L34:
  90 002c 53B1     		cbz	r3, .L23
  91 002e 013B     		subs	r3, r3, #1
  92              	.L17:
  93 0030 9168     		ldr	r1, [r2, #8]
  94 0032 8807     		lsls	r0, r1, #30
  95 0034 FAD5     		bpl	.L34
  96 0036 2BB1     		cbz	r3, .L23
  97 0038 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
  98 003c 1173     		strb	r1, [r2, #12]
  99 003e 01E0     		b	.L23
 100              	.L35:
 101 0040 33B1     		cbz	r3, .L26
 102 0042 013B     		subs	r3, r3, #1
 103              	.L23:
 104 0044 9168     		ldr	r1, [r2, #8]
 105 0046 C907     		lsls	r1, r1, #31
 106 0048 FAD5     		bpl	.L35
 107 004a 0BB1     		cbz	r3, .L26
 108 004c 137B     		ldrb	r3, [r2, #12]	@ zero_extendqisi2
 109 004e 15E0     		b	.L14
 110              	.L26:
 111 0050 0122     		movs	r2, #1
 112 0052 0DF10F01 		add	r1, sp, #15
 113 0056 0DF10700 		add	r0, sp, #7
 114 005a FFF7FEFF 		bl	SPIx_WriteReadData1
 115 005e 0A48     		ldr	r0, .L36+4
 116 0060 FFF7FEFF 		bl	HAL_SPI_DeInit
 117 0064 0020     		movs	r0, #0
 118 0066 FFF7FEFF 		bl	MX_SPI1_Init
 119 006a 084B     		ldr	r3, .L36+8
ARM GAS  /tmp/ccDaY04z.s 			page 3


 120 006c 1A68     		ldr	r2, [r3]
 121 006e 22F04002 		bic	r2, r2, #64
 122 0072 1A60     		str	r2, [r3]
 123 0074 1A68     		ldr	r2, [r3]
 124 0076 42F04002 		orr	r2, r2, #64
 125 007a 1A60     		str	r2, [r3]
 126              	.L14:
 127 007c 05B0     		add	sp, sp, #20
 128              		@ sp needed
 129 007e 5DF804FB 		ldr	pc, [sp], #4
 130              	.L37:
 131 0082 00BF     		.align	2
 132              	.L36:
 133 0084 000C0140 		.word	1073810432
 134 0088 00000000 		.word	hspi1
 135 008c 00300140 		.word	1073819648
 137              		.section	.text.dmaSendDataCont8,"ax",%progbits
 138              		.align	1
 139              		.global	dmaSendDataCont8
 140              		.thumb
 141              		.thumb_func
 143              	dmaSendDataCont8:
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 147 0002 0446     		mov	r4, r0
 148 0004 0A4B     		ldr	r3, .L44
 149 0006 0822     		movs	r2, #8
 150 0008 1A61     		str	r2, [r3, #16]
 151 000a 4518     		adds	r5, r0, r1
 152              	.L39:
 153 000c AC42     		cmp	r4, r5
 154 000e 04D0     		beq	.L43
 155 0010 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 156 0014 FFF7FEFF 		bl	SPIx_WriteF
 157 0018 F8E7     		b	.L39
 158              	.L43:
 159 001a 0DF10700 		add	r0, sp, #7
 160 001e FFF7FEFF 		bl	SPIx_ReadF
 161 0022 044B     		ldr	r3, .L44+4
 162 0024 1A68     		ldr	r2, [r3]
 163              	.L41:
 164 0026 9368     		ldr	r3, [r2, #8]
 165 0028 1B06     		lsls	r3, r3, #24
 166 002a FCD4     		bmi	.L41
 167 002c 03B0     		add	sp, sp, #12
 168              		@ sp needed
 169 002e 30BD     		pop	{r4, r5, pc}
 170              	.L45:
 171              		.align	2
 172              	.L44:
 173 0030 00080140 		.word	1073809408
 174 0034 00000000 		.word	hspi1
 176              		.section	.text.color_convert,"ax",%progbits
 177              		.align	1
 178              		.global	color_convert
 179              		.thumb
ARM GAS  /tmp/ccDaY04z.s 			page 4


 180              		.thumb_func
 182              	color_convert:
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 186 0000 0301     		lsls	r3, r0, #4
 187 0002 8B70     		strb	r3, [r1, #2]
 188 0004 4309     		lsrs	r3, r0, #5
 189 0006 C00A     		lsrs	r0, r0, #11
 190 0008 9B00     		lsls	r3, r3, #2
 191 000a 0001     		lsls	r0, r0, #4
 192 000c 4B70     		strb	r3, [r1, #1]
 193 000e 0870     		strb	r0, [r1]
 194 0010 7047     		bx	lr
 196              		.section	.text.dmaSendDataCont16,"ax",%progbits
 197              		.align	1
 198              		.global	dmaSendDataCont16
 199              		.thumb
 200              		.thumb_func
 202              	dmaSendDataCont16:
 203              		@ args = 0, pretend = 0, frame = 8
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 206 0002 0E46     		mov	r6, r1
 207 0004 0446     		mov	r4, r0
 208 0006 0E4B     		ldr	r3, .L53
 209 0008 0822     		movs	r2, #8
 210 000a 1A61     		str	r2, [r3, #16]
 211 000c 0025     		movs	r5, #0
 212              	.L48:
 213 000e B542     		cmp	r5, r6
 214 0010 04F10204 		add	r4, r4, #2
 215 0014 09D0     		beq	.L52
 216 0016 14F8010C 		ldrb	r0, [r4, #-1]	@ zero_extendqisi2
 217 001a FFF7FEFF 		bl	SPIx_WriteF
 218 001e 14F8020C 		ldrb	r0, [r4, #-2]	@ zero_extendqisi2
 219 0022 FFF7FEFF 		bl	SPIx_WriteF
 220 0026 0135     		adds	r5, r5, #1
 221 0028 F1E7     		b	.L48
 222              	.L52:
 223 002a 0DF10700 		add	r0, sp, #7
 224 002e FFF7FEFF 		bl	SPIx_ReadF
 225 0032 044B     		ldr	r3, .L53+4
 226 0034 1A68     		ldr	r2, [r3]
 227              	.L50:
 228 0036 9368     		ldr	r3, [r2, #8]
 229 0038 1B06     		lsls	r3, r3, #24
 230 003a FCD4     		bmi	.L50
 231 003c 02B0     		add	sp, sp, #8
 232              		@ sp needed
 233 003e 70BD     		pop	{r4, r5, r6, pc}
 234              	.L54:
 235              		.align	2
 236              	.L53:
 237 0040 00080140 		.word	1073809408
 238 0044 00000000 		.word	hspi1
 240              		.section	.text.dmaFill16,"ax",%progbits
ARM GAS  /tmp/ccDaY04z.s 			page 5


 241              		.align	1
 242              		.global	dmaFill16
 243              		.thumb
 244              		.thumb_func
 246              	dmaFill16:
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 250 0002 0546     		mov	r5, r0
 251 0004 2C20     		movs	r0, #44
 252 0006 0C46     		mov	r4, r1
 253 0008 FFF7FEFF 		bl	dmaSendCmdCont
 254 000c 124B     		ldr	r3, .L61
 255 000e 0822     		movs	r2, #8
 256 0010 1A61     		str	r2, [r3, #16]
 257 0012 2846     		mov	r0, r5
 258 0014 01A9     		add	r1, sp, #4
 259 0016 FFF7FEFF 		bl	color_convert
 260              	.L56:
 261 001a 6CB1     		cbz	r4, .L60
 262 001c 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 263 0020 FFF7FEFF 		bl	SPIx_WriteF
 264 0024 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 265 0028 FFF7FEFF 		bl	SPIx_WriteF
 266 002c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 267 0030 FFF7FEFF 		bl	SPIx_WriteF
 268 0034 013C     		subs	r4, r4, #1
 269 0036 F0E7     		b	.L56
 270              	.L60:
 271 0038 0DF10300 		add	r0, sp, #3
 272 003c FFF7FEFF 		bl	SPIx_ReadF
 273 0040 064B     		ldr	r3, .L61+4
 274 0042 1A68     		ldr	r2, [r3]
 275              	.L58:
 276 0044 9368     		ldr	r3, [r2, #8]
 277 0046 1B06     		lsls	r3, r3, #24
 278 0048 FCD4     		bmi	.L58
 279 004a 054B     		ldr	r3, .L61+8
 280 004c 4FF48062 		mov	r2, #1024
 281 0050 1A61     		str	r2, [r3, #16]
 282 0052 03B0     		add	sp, sp, #12
 283              		@ sp needed
 284 0054 30BD     		pop	{r4, r5, pc}
 285              	.L62:
 286 0056 00BF     		.align	2
 287              	.L61:
 288 0058 00080140 		.word	1073809408
 289 005c 00000000 		.word	hspi1
 290 0060 000C0140 		.word	1073810432
 292              		.section	.text.dmaFill16_2,"ax",%progbits
 293              		.align	1
 294              		.global	dmaFill16_2
 295              		.thumb
 296              		.thumb_func
 298              	dmaFill16_2:
 299              		@ args = 0, pretend = 0, frame = 16
 300              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccDaY04z.s 			page 6


 301 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 302 0002 0646     		mov	r6, r0
 303 0004 0D46     		mov	r5, r1
 304 0006 2C20     		movs	r0, #44
 305 0008 1446     		mov	r4, r2
 306 000a FFF7FEFF 		bl	dmaSendCmdCont
 307 000e 1B4B     		ldr	r3, .L69
 308 0010 0822     		movs	r2, #8
 309 0012 3046     		mov	r0, r6
 310 0014 0DEB0201 		add	r1, sp, r2
 311 0018 1A61     		str	r2, [r3, #16]
 312 001a FFF7FEFF 		bl	color_convert
 313 001e 2846     		mov	r0, r5
 314 0020 03A9     		add	r1, sp, #12
 315 0022 FFF7FEFF 		bl	color_convert
 316              	.L64:
 317 0026 CCB1     		cbz	r4, .L68
 318 0028 9DF80800 		ldrb	r0, [sp, #8]	@ zero_extendqisi2
 319 002c FFF7FEFF 		bl	SPIx_WriteF
 320 0030 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 321 0034 FFF7FEFF 		bl	SPIx_WriteF
 322 0038 9DF80A00 		ldrb	r0, [sp, #10]	@ zero_extendqisi2
 323 003c FFF7FEFF 		bl	SPIx_WriteF
 324 0040 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2
 325 0044 FFF7FEFF 		bl	SPIx_WriteF
 326 0048 9DF80D00 		ldrb	r0, [sp, #13]	@ zero_extendqisi2
 327 004c FFF7FEFF 		bl	SPIx_WriteF
 328 0050 9DF80E00 		ldrb	r0, [sp, #14]	@ zero_extendqisi2
 329 0054 FFF7FEFF 		bl	SPIx_WriteF
 330 0058 013C     		subs	r4, r4, #1
 331 005a E4E7     		b	.L64
 332              	.L68:
 333 005c 0DF10700 		add	r0, sp, #7
 334 0060 FFF7FEFF 		bl	SPIx_ReadF
 335 0064 064B     		ldr	r3, .L69+4
 336 0066 1A68     		ldr	r2, [r3]
 337              	.L66:
 338 0068 9368     		ldr	r3, [r2, #8]
 339 006a 1B06     		lsls	r3, r3, #24
 340 006c FCD4     		bmi	.L66
 341 006e 054B     		ldr	r3, .L69+8
 342 0070 4FF48062 		mov	r2, #1024
 343 0074 1A61     		str	r2, [r3, #16]
 344 0076 04B0     		add	sp, sp, #16
 345              		@ sp needed
 346 0078 70BD     		pop	{r4, r5, r6, pc}
 347              	.L70:
 348 007a 00BF     		.align	2
 349              	.L69:
 350 007c 00080140 		.word	1073809408
 351 0080 00000000 		.word	hspi1
 352 0084 000C0140 		.word	1073810432
 354              		.section	.text.LCD_reset,"ax",%progbits
 355              		.align	1
 356              		.global	LCD_reset
 357              		.thumb
 358              		.thumb_func
ARM GAS  /tmp/ccDaY04z.s 			page 7


 360              	LCD_reset:
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 10B5     		push	{r4, lr}
 364 0002 094B     		ldr	r3, .L72
 365 0004 094C     		ldr	r4, .L72+4
 366 0006 4FF48062 		mov	r2, #1024
 367 000a 4FF48011 		mov	r1, #1048576
 368 000e 1A61     		str	r2, [r3, #16]
 369 0010 0A20     		movs	r0, #10
 370 0012 2161     		str	r1, [r4, #16]
 371 0014 1A61     		str	r2, [r3, #16]
 372 0016 FFF7FEFF 		bl	HAL_Delay
 373 001a 1023     		movs	r3, #16
 374 001c 2361     		str	r3, [r4, #16]
 375 001e 3220     		movs	r0, #50
 376 0020 BDE81040 		pop	{r4, lr}
 377 0024 FFF7FEBF 		b	HAL_Delay
 378              	.L73:
 379              		.align	2
 380              	.L72:
 381 0028 000C0140 		.word	1073810432
 382 002c 00080140 		.word	1073809408
 384              		.section	.text.LCD_exitStandby,"ax",%progbits
 385              		.align	1
 386              		.global	LCD_exitStandby
 387              		.thumb
 388              		.thumb_func
 390              	LCD_exitStandby:
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393 0000 38B5     		push	{r3, r4, r5, lr}
 394 0002 074C     		ldr	r4, .L75
 395 0004 1120     		movs	r0, #17
 396 0006 4FF48065 		mov	r5, #1024
 397 000a FFF7FEFF 		bl	dmaSendCmdCont
 398 000e 9620     		movs	r0, #150
 399 0010 2561     		str	r5, [r4, #16]
 400 0012 FFF7FEFF 		bl	HAL_Delay
 401 0016 2920     		movs	r0, #41
 402 0018 FFF7FEFF 		bl	dmaSendCmdCont
 403 001c 2561     		str	r5, [r4, #16]
 404 001e 38BD     		pop	{r3, r4, r5, pc}
 405              	.L76:
 406              		.align	2
 407              	.L75:
 408 0020 000C0140 		.word	1073810432
 410              		.section	.text.LCD_idle,"ax",%progbits
 411              		.align	1
 412              		.global	LCD_idle
 413              		.thumb
 414              		.thumb_func
 416              	LCD_idle:
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419 0000 08B5     		push	{r3, lr}
 420 0002 0028     		cmp	r0, #0
ARM GAS  /tmp/ccDaY04z.s 			page 8


 421 0004 14BF     		ite	ne
 422 0006 3920     		movne	r0, #57
 423 0008 3820     		moveq	r0, #56
 424 000a FFF7FEFF 		bl	dmaSendCmdCont
 425 000e 024B     		ldr	r3, .L80
 426 0010 4FF48062 		mov	r2, #1024
 427 0014 1A61     		str	r2, [r3, #16]
 428 0016 08BD     		pop	{r3, pc}
 429              	.L81:
 430              		.align	2
 431              	.L80:
 432 0018 000C0140 		.word	1073810432
 434              		.section	.text.LCD_readSometing,"ax",%progbits
 435              		.align	1
 436              		.global	LCD_readSometing
 437              		.thumb
 438              		.thumb_func
 440              	LCD_readSometing:
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443 0000 70B5     		push	{r4, r5, r6, lr}
 444 0002 0546     		mov	r5, r0
 445 0004 104C     		ldr	r4, .L86
 446 0006 4FF40023 		mov	r3, #524288
 447 000a 2361     		str	r3, [r4, #16]
 448 000c 0F4B     		ldr	r3, .L86+4
 449 000e 1646     		mov	r6, r2
 450 0010 4FF08062 		mov	r2, #67108864
 451 0014 1A61     		str	r2, [r3, #16]
 452 0016 0846     		mov	r0, r1
 453 0018 FFF7FEFF 		bl	SPIx_WriteF
 454 001c 2846     		mov	r0, r5
 455 001e FFF7FEFF 		bl	SPIx_ReadF
 456 0022 0823     		movs	r3, #8
 457 0024 2361     		str	r3, [r4, #16]
 458 0026 0024     		movs	r4, #0
 459              	.L83:
 460 0028 B442     		cmp	r4, r6
 461 002a 07DA     		bge	.L85
 462 002c 0020     		movs	r0, #0
 463 002e FFF7FEFF 		bl	SPIx_WriteF
 464 0032 2819     		adds	r0, r5, r4
 465 0034 FFF7FEFF 		bl	SPIx_ReadF
 466 0038 0134     		adds	r4, r4, #1
 467 003a F5E7     		b	.L83
 468              	.L85:
 469 003c 034B     		ldr	r3, .L86+4
 470 003e 4FF48062 		mov	r2, #1024
 471 0042 1A61     		str	r2, [r3, #16]
 472 0044 70BD     		pop	{r4, r5, r6, pc}
 473              	.L87:
 474 0046 00BF     		.align	2
 475              	.L86:
 476 0048 00080140 		.word	1073809408
 477 004c 000C0140 		.word	1073810432
 479              		.section	.text.LCD_setOrientation,"ax",%progbits
 480              		.align	1
ARM GAS  /tmp/ccDaY04z.s 			page 9


 481              		.global	LCD_setOrientation
 482              		.thumb
 483              		.thumb_func
 485              	LCD_setOrientation:
 486              		@ args = 0, pretend = 0, frame = 8
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488 0000 07B5     		push	{r0, r1, r2, lr}
 489 0002 2828     		cmp	r0, #40
 490 0004 8DF80700 		strb	r0, [sp, #7]
 491 0008 0E4A     		ldr	r2, .L96
 492 000a 0F4B     		ldr	r3, .L96+4
 493 000c 01D0     		beq	.L89
 494 000e E828     		cmp	r0, #232
 495 0010 04D1     		bne	.L90
 496              	.L89:
 497 0012 F021     		movs	r1, #240
 498 0014 1180     		strh	r1, [r2]	@ movhi
 499 0016 4FF4A072 		mov	r2, #320
 500 001a 03E0     		b	.L95
 501              	.L90:
 502 001c 4FF4A071 		mov	r1, #320
 503 0020 1180     		strh	r1, [r2]	@ movhi
 504 0022 F022     		movs	r2, #240
 505              	.L95:
 506 0024 3620     		movs	r0, #54
 507 0026 1A80     		strh	r2, [r3]	@ movhi
 508 0028 FFF7FEFF 		bl	dmaSendCmdCont
 509 002c 0DF10700 		add	r0, sp, #7
 510 0030 0121     		movs	r1, #1
 511 0032 FFF7FEFF 		bl	dmaSendDataCont8
 512 0036 054B     		ldr	r3, .L96+8
 513 0038 4FF48062 		mov	r2, #1024
 514 003c 1A61     		str	r2, [r3, #16]
 515 003e 03B0     		add	sp, sp, #12
 516              		@ sp needed
 517 0040 5DF804FB 		ldr	pc, [sp], #4
 518              	.L97:
 519              		.align	2
 520              	.L96:
 521 0044 00000000 		.word	.LANCHOR0
 522 0048 00000000 		.word	.LANCHOR1
 523 004c 000C0140 		.word	1073810432
 525              		.section	.text.LCD_init,"ax",%progbits
 526              		.align	1
 527              		.global	LCD_init
 528              		.thumb
 529              		.thumb_func
 531              	LCD_init:
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534 0000 70B5     		push	{r4, r5, r6, lr}
 535 0002 1A4B     		ldr	r3, .L101
 536 0004 1A4C     		ldr	r4, .L101+4
 537 0006 4FF48025 		mov	r5, #262144
 538 000a 4FF48062 		mov	r2, #1024
 539 000e 2561     		str	r5, [r4, #16]
 540 0010 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/ccDaY04z.s 			page 10


 541 0012 03F51053 		add	r3, r3, #9216
 542 0016 1A68     		ldr	r2, [r3]
 543 0018 22F04002 		bic	r2, r2, #64
 544 001c 1A60     		str	r2, [r3]
 545 001e 1A68     		ldr	r2, [r3]
 546 0020 22F40062 		bic	r2, r2, #2048
 547 0024 1A60     		str	r2, [r3]
 548 0026 1A68     		ldr	r2, [r3]
 549 0028 42F04002 		orr	r2, r2, #64
 550 002c 1A60     		str	r2, [r3]
 551 002e FFF7FEFF 		bl	LCD_reset
 552 0032 2561     		str	r5, [r4, #16]
 553 0034 2546     		mov	r5, r4
 554 0036 FFF7FEFF 		bl	LCD_exitStandby
 555 003a 0E4B     		ldr	r3, .L101+8
 556              	.L100:
 557 003c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 558 003e 441E     		subs	r4, r0, #1
 559 0040 E4B2     		uxtb	r4, r4
 560 0042 68B1     		cbz	r0, .L99
 561 0044 9E1C     		adds	r6, r3, #2
 562 0046 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 563 0048 FFF7FEFF 		bl	dmaSendCmdCont
 564 004c 3046     		mov	r0, r6
 565 004e 2146     		mov	r1, r4
 566 0050 FFF7FEFF 		bl	dmaSendDataCont8
 567 0054 054B     		ldr	r3, .L101
 568 0056 4FF48062 		mov	r2, #1024
 569 005a 1A61     		str	r2, [r3, #16]
 570 005c 3319     		adds	r3, r6, r4
 571 005e EDE7     		b	.L100
 572              	.L99:
 573 0060 FFF7FEFF 		bl	LCD_setOrientation
 574 0064 0423     		movs	r3, #4
 575 0066 2B61     		str	r3, [r5, #16]
 576 0068 70BD     		pop	{r4, r5, r6, pc}
 577              	.L102:
 578 006a 00BF     		.align	2
 579              	.L101:
 580 006c 000C0140 		.word	1073810432
 581 0070 00080140 		.word	1073809408
 582 0074 00000000 		.word	.LANCHOR2
 584              		.section	.text.LCD_setAddressWindow,"ax",%progbits
 585              		.align	1
 586              		.global	LCD_setAddressWindow
 587              		.thumb
 588              		.thumb_func
 590              	LCD_setAddressWindow:
 591              		@ args = 0, pretend = 0, frame = 8
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 594 0002 1646     		mov	r6, r2
 595 0004 0746     		mov	r7, r0
 596 0006 1C46     		mov	r4, r3
 597 0008 0D46     		mov	r5, r1
 598 000a 2A20     		movs	r0, #42
 599 000c FFF7FEFF 		bl	dmaSendCmdCont
ARM GAS  /tmp/ccDaY04z.s 			page 11


 600 0010 01A8     		add	r0, sp, #4
 601 0012 0221     		movs	r1, #2
 602 0014 ADF80470 		strh	r7, [sp, #4]	@ movhi
 603 0018 ADF80660 		strh	r6, [sp, #6]	@ movhi
 604 001c FFF7FEFF 		bl	dmaSendDataCont16
 605 0020 2B20     		movs	r0, #43
 606 0022 FFF7FEFF 		bl	dmaSendCmdCont
 607 0026 01A8     		add	r0, sp, #4
 608 0028 0221     		movs	r1, #2
 609 002a ADF80450 		strh	r5, [sp, #4]	@ movhi
 610 002e ADF80640 		strh	r4, [sp, #6]	@ movhi
 611 0032 FFF7FEFF 		bl	dmaSendDataCont16
 612 0036 03B0     		add	sp, sp, #12
 613              		@ sp needed
 614 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
 616              		.section	.text.LCD_Write64bytes,"ax",%progbits
 617              		.align	1
 618              		.global	LCD_Write64bytes
 619              		.thumb
 620              		.thumb_func
 622              	LCD_Write64bytes:
 623              		@ args = 0, pretend = 0, frame = 8
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 626 0002 1446     		mov	r4, r2
 627 0004 CB1C     		adds	r3, r1, #3
 628 0006 C21D     		adds	r2, r0, #7
 629 0008 92B2     		uxth	r2, r2
 630 000a 9BB2     		uxth	r3, r3
 631 000c FFF7FEFF 		bl	LCD_setAddressWindow
 632 0010 2C20     		movs	r0, #44
 633 0012 FFF7FEFF 		bl	dmaSendCmdCont
 634 0016 114B     		ldr	r3, .L107
 635 0018 0822     		movs	r2, #8
 636 001a 1A61     		str	r2, [r3, #16]
 637 001c A61E     		subs	r6, r4, #2
 638 001e 04F13E05 		add	r5, r4, #62
 639              	.L105:
 640 0022 36F8024F 		ldrh	r4, [r6, #2]!
 641 0026 A000     		lsls	r0, r4, #2
 642 0028 00F0FC00 		and	r0, r0, #252
 643 002c FFF7FEFF 		bl	SPIx_WriteF
 644 0030 2009     		lsrs	r0, r4, #4
 645 0032 00F0FC00 		and	r0, r0, #252
 646 0036 FFF7FEFF 		bl	SPIx_WriteF
 647 003a 200B     		lsrs	r0, r4, #12
 648 003c 8000     		lsls	r0, r0, #2
 649 003e FFF7FEFF 		bl	SPIx_WriteF
 650 0042 AE42     		cmp	r6, r5
 651 0044 EDD1     		bne	.L105
 652 0046 0DF10700 		add	r0, sp, #7
 653 004a FFF7FEFF 		bl	SPIx_ReadF
 654 004e 044B     		ldr	r3, .L107+4
 655 0050 4FF48062 		mov	r2, #1024
 656 0054 1A61     		str	r2, [r3, #16]
 657 0056 02B0     		add	sp, sp, #8
 658              		@ sp needed
ARM GAS  /tmp/ccDaY04z.s 			page 12


 659 0058 70BD     		pop	{r4, r5, r6, pc}
 660              	.L108:
 661 005a 00BF     		.align	2
 662              	.L107:
 663 005c 00080140 		.word	1073809408
 664 0060 000C0140 		.word	1073810432
 666              		.section	.text.LCD_Read64bytes,"ax",%progbits
 667              		.align	1
 668              		.global	LCD_Read64bytes
 669              		.thumb
 670              		.thumb_func
 672              	LCD_Read64bytes:
 673              		@ args = 0, pretend = 0, frame = 8
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 676 0002 CB1C     		adds	r3, r1, #3
 677 0004 1446     		mov	r4, r2
 678 0006 C21D     		adds	r2, r0, #7
 679 0008 92B2     		uxth	r2, r2
 680 000a 9BB2     		uxth	r3, r3
 681 000c FFF7FEFF 		bl	LCD_setAddressWindow
 682 0010 2E20     		movs	r0, #46
 683 0012 FFF7FEFF 		bl	dmaSendCmdCont
 684 0016 1B4B     		ldr	r3, .L112
 685 0018 0822     		movs	r2, #8
 686 001a 1A61     		str	r2, [r3, #16]
 687 001c FF20     		movs	r0, #255
 688 001e FFF7FEFF 		bl	SPIx_WriteF
 689 0022 01A8     		add	r0, sp, #4
 690 0024 FFF7FEFF 		bl	SPIx_ReadF
 691 0028 A51E     		subs	r5, r4, #2
 692 002a 3E34     		adds	r4, r4, #62
 693              	.L110:
 694 002c FF20     		movs	r0, #255
 695 002e FFF7FEFF 		bl	SPIx_WriteF
 696 0032 01A8     		add	r0, sp, #4
 697 0034 FFF7FEFF 		bl	SPIx_ReadF
 698 0038 FF20     		movs	r0, #255
 699 003a FFF7FEFF 		bl	SPIx_WriteF
 700 003e 0DF10500 		add	r0, sp, #5
 701 0042 FFF7FEFF 		bl	SPIx_ReadF
 702 0046 FF20     		movs	r0, #255
 703 0048 FFF7FEFF 		bl	SPIx_WriteF
 704 004c 0DF10600 		add	r0, sp, #6
 705 0050 FFF7FEFF 		bl	SPIx_ReadF
 706 0054 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 707 0058 9A08     		lsrs	r2, r3, #2
 708 005a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 709 005e 9B08     		lsrs	r3, r3, #2
 710 0060 1B03     		lsls	r3, r3, #12
 711 0062 43EA8213 		orr	r3, r3, r2, lsl #6
 712 0066 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 713 006a 43EA9203 		orr	r3, r3, r2, lsr #2
 714 006e 25F8023F 		strh	r3, [r5, #2]!	@ movhi
 715 0072 A542     		cmp	r5, r4
 716 0074 DAD1     		bne	.L110
 717 0076 044B     		ldr	r3, .L112+4
ARM GAS  /tmp/ccDaY04z.s 			page 13


 718 0078 4FF48062 		mov	r2, #1024
 719 007c 1A61     		str	r2, [r3, #16]
 720 007e 03B0     		add	sp, sp, #12
 721              		@ sp needed
 722 0080 30BD     		pop	{r4, r5, pc}
 723              	.L113:
 724 0082 00BF     		.align	2
 725              	.L112:
 726 0084 00080140 		.word	1073809408
 727 0088 000C0140 		.word	1073810432
 729              		.section	.text.LCD_Write8x8line,"ax",%progbits
 730              		.align	1
 731              		.global	LCD_Write8x8line
 732              		.thumb
 733              		.thumb_func
 735              	LCD_Write8x8line:
 736              		@ args = 0, pretend = 0, frame = 8
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 739 0002 1546     		mov	r5, r2
 740 0004 CB1D     		adds	r3, r1, #7
 741 0006 C21D     		adds	r2, r0, #7
 742 0008 92B2     		uxth	r2, r2
 743 000a 9BB2     		uxth	r3, r3
 744 000c FFF7FEFF 		bl	LCD_setAddressWindow
 745 0010 2C20     		movs	r0, #44
 746 0012 FFF7FEFF 		bl	dmaSendCmdCont
 747 0016 0F4B     		ldr	r3, .L117
 748 0018 0822     		movs	r2, #8
 749 001a EC1C     		adds	r4, r5, #3
 750 001c 1A61     		str	r2, [r3, #16]
 751 001e C335     		adds	r5, r5, #195
 752              	.L115:
 753 0020 14F8030C 		ldrb	r0, [r4, #-3]	@ zero_extendqisi2
 754 0024 FFF7FEFF 		bl	SPIx_WriteF
 755 0028 14F8020C 		ldrb	r0, [r4, #-2]	@ zero_extendqisi2
 756 002c FFF7FEFF 		bl	SPIx_WriteF
 757 0030 0334     		adds	r4, r4, #3
 758 0032 14F8040C 		ldrb	r0, [r4, #-4]	@ zero_extendqisi2
 759 0036 FFF7FEFF 		bl	SPIx_WriteF
 760 003a AC42     		cmp	r4, r5
 761 003c F0D1     		bne	.L115
 762 003e 0DF10700 		add	r0, sp, #7
 763 0042 FFF7FEFF 		bl	SPIx_ReadF
 764 0046 044B     		ldr	r3, .L117+4
 765 0048 4FF48062 		mov	r2, #1024
 766 004c 1A61     		str	r2, [r3, #16]
 767 004e 03B0     		add	sp, sp, #12
 768              		@ sp needed
 769 0050 30BD     		pop	{r4, r5, pc}
 770              	.L118:
 771 0052 00BF     		.align	2
 772              	.L117:
 773 0054 00080140 		.word	1073809408
 774 0058 000C0140 		.word	1073810432
 776              		.section	.text.LCD_FullRect3,"ax",%progbits
 777              		.align	1
ARM GAS  /tmp/ccDaY04z.s 			page 14


 778              		.global	LCD_FullRect3
 779              		.thumb
 780              		.thumb_func
 782              	LCD_FullRect3:
 783              		@ args = 4, pretend = 0, frame = 8
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 786 0002 1E46     		mov	r6, r3
 787 0004 BDF81840 		ldrh	r4, [sp, #24]
 788 0008 1546     		mov	r5, r2
 789 000a 5A1E     		subs	r2, r3, #1
 790 000c 631E     		subs	r3, r4, #1
 791 000e 0244     		add	r2, r2, r0
 792 0010 0B44     		add	r3, r3, r1
 793 0012 92B2     		uxth	r2, r2
 794 0014 9BB2     		uxth	r3, r3
 795 0016 FFF7FEFF 		bl	LCD_setAddressWindow
 796 001a 7443     		muls	r4, r6, r4
 797 001c 2C20     		movs	r0, #44
 798 001e FFF7FEFF 		bl	dmaSendCmdCont
 799 0022 0F4B     		ldr	r3, .L125
 800 0024 0822     		movs	r2, #8
 801 0026 1A61     		str	r2, [r3, #16]
 802              	.L120:
 803 0028 54B1     		cbz	r4, .L124
 804 002a 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 805 002c FFF7FEFF 		bl	SPIx_WriteF
 806 0030 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 807 0032 FFF7FEFF 		bl	SPIx_WriteF
 808 0036 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 809 0038 FFF7FEFF 		bl	SPIx_WriteF
 810 003c 013C     		subs	r4, r4, #1
 811 003e F3E7     		b	.L120
 812              	.L124:
 813 0040 0DF10700 		add	r0, sp, #7
 814 0044 FFF7FEFF 		bl	SPIx_ReadF
 815 0048 064B     		ldr	r3, .L125+4
 816 004a 1A68     		ldr	r2, [r3]
 817              	.L122:
 818 004c 9368     		ldr	r3, [r2, #8]
 819 004e 1B06     		lsls	r3, r3, #24
 820 0050 FCD4     		bmi	.L122
 821 0052 054B     		ldr	r3, .L125+8
 822 0054 4FF48062 		mov	r2, #1024
 823 0058 1A61     		str	r2, [r3, #16]
 824 005a 02B0     		add	sp, sp, #8
 825              		@ sp needed
 826 005c 70BD     		pop	{r4, r5, r6, pc}
 827              	.L126:
 828 005e 00BF     		.align	2
 829              	.L125:
 830 0060 00080140 		.word	1073809408
 831 0064 00000000 		.word	hspi1
 832 0068 000C0140 		.word	1073810432
 834              		.section	.text.LCD_FullRect6,"ax",%progbits
 835              		.align	1
 836              		.global	LCD_FullRect6
ARM GAS  /tmp/ccDaY04z.s 			page 15


 837              		.thumb
 838              		.thumb_func
 840              	LCD_FullRect6:
 841              		@ args = 8, pretend = 0, frame = 8
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 844 0002 BDF82070 		ldrh	r7, [sp, #32]
 845 0006 BDF82440 		ldrh	r4, [sp, #36]
 846 000a 1546     		mov	r5, r2
 847 000c 1E46     		mov	r6, r3
 848 000e 7A1E     		subs	r2, r7, #1
 849 0010 631E     		subs	r3, r4, #1
 850 0012 0244     		add	r2, r2, r0
 851 0014 0B44     		add	r3, r3, r1
 852 0016 92B2     		uxth	r2, r2
 853 0018 9BB2     		uxth	r3, r3
 854 001a 7C43     		muls	r4, r7, r4
 855 001c FFF7FEFF 		bl	LCD_setAddressWindow
 856 0020 2C20     		movs	r0, #44
 857 0022 FFF7FEFF 		bl	dmaSendCmdCont
 858 0026 144B     		ldr	r3, .L133
 859 0028 0822     		movs	r2, #8
 860 002a 1A61     		str	r2, [r3, #16]
 861 002c 6410     		asrs	r4, r4, #1
 862              	.L128:
 863 002e 002C     		cmp	r4, #0
 864 0030 13DD     		ble	.L132
 865 0032 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 866 0034 FFF7FEFF 		bl	SPIx_WriteF
 867 0038 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 868 003a FFF7FEFF 		bl	SPIx_WriteF
 869 003e A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 870 0040 FFF7FEFF 		bl	SPIx_WriteF
 871 0044 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 872 0046 FFF7FEFF 		bl	SPIx_WriteF
 873 004a 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 874 004c FFF7FEFF 		bl	SPIx_WriteF
 875 0050 B078     		ldrb	r0, [r6, #2]	@ zero_extendqisi2
 876 0052 FFF7FEFF 		bl	SPIx_WriteF
 877 0056 013C     		subs	r4, r4, #1
 878 0058 E9E7     		b	.L128
 879              	.L132:
 880 005a 0DF10700 		add	r0, sp, #7
 881 005e FFF7FEFF 		bl	SPIx_ReadF
 882 0062 064B     		ldr	r3, .L133+4
 883 0064 1A68     		ldr	r2, [r3]
 884              	.L130:
 885 0066 9368     		ldr	r3, [r2, #8]
 886 0068 1B06     		lsls	r3, r3, #24
 887 006a FCD4     		bmi	.L130
 888 006c 044B     		ldr	r3, .L133+8
 889 006e 4FF48062 		mov	r2, #1024
 890 0072 1A61     		str	r2, [r3, #16]
 891 0074 03B0     		add	sp, sp, #12
 892              		@ sp needed
 893 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 894              	.L134:
ARM GAS  /tmp/ccDaY04z.s 			page 16


 895              		.align	2
 896              	.L133:
 897 0078 00080140 		.word	1073809408
 898 007c 00000000 		.word	hspi1
 899 0080 000C0140 		.word	1073810432
 901              		.section	.text.LCD_fillRect,"ax",%progbits
 902              		.align	1
 903              		.global	LCD_fillRect
 904              		.thumb
 905              		.thumb_func
 907              	LCD_fillRect:
 908              		@ args = 4, pretend = 0, frame = 8
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 911 0002 1446     		mov	r4, r2
 912 0004 1F46     		mov	r7, r3
 913 0006 0646     		mov	r6, r0
 914 0008 0D46     		mov	r5, r1
 915 000a 85B0     		sub	sp, sp, #20
 916 000c BDF82800 		ldrh	r0, [sp, #40]
 917 0010 03A9     		add	r1, sp, #12
 918 0012 FFF7FEFF 		bl	color_convert
 919 0016 0097     		str	r7, [sp]
 920 0018 3046     		mov	r0, r6
 921 001a 2946     		mov	r1, r5
 922 001c 03AA     		add	r2, sp, #12
 923 001e 2346     		mov	r3, r4
 924 0020 FFF7FEFF 		bl	LCD_FullRect3
 925 0024 05B0     		add	sp, sp, #20
 926              		@ sp needed
 927 0026 F0BD     		pop	{r4, r5, r6, r7, pc}
 929              		.section	.text.LCD_fillRect2,"ax",%progbits
 930              		.align	1
 931              		.global	LCD_fillRect2
 932              		.thumb
 933              		.thumb_func
 935              	LCD_fillRect2:
 936              		@ args = 8, pretend = 0, frame = 8
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 939 0002 1746     		mov	r7, r2
 940 0004 1E46     		mov	r6, r3
 941 0006 0546     		mov	r5, r0
 942 0008 0C46     		mov	r4, r1
 943 000a 85B0     		sub	sp, sp, #20
 944 000c BDF82800 		ldrh	r0, [sp, #40]
 945 0010 02A9     		add	r1, sp, #8
 946 0012 FFF7FEFF 		bl	color_convert
 947 0016 BDF82C00 		ldrh	r0, [sp, #44]
 948 001a 03A9     		add	r1, sp, #12
 949 001c FFF7FEFF 		bl	color_convert
 950 0020 0097     		str	r7, [sp]
 951 0022 0196     		str	r6, [sp, #4]
 952 0024 2846     		mov	r0, r5
 953 0026 2146     		mov	r1, r4
 954 0028 02AA     		add	r2, sp, #8
 955 002a 03AB     		add	r3, sp, #12
ARM GAS  /tmp/ccDaY04z.s 			page 17


 956 002c FFF7FEFF 		bl	LCD_FullRect6
 957 0030 05B0     		add	sp, sp, #20
 958              		@ sp needed
 959 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 961              		.section	.text.LCD_getWidth,"ax",%progbits
 962              		.align	1
 963              		.global	LCD_getWidth
 964              		.thumb
 965              		.thumb_func
 967              	LCD_getWidth:
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971 0000 014B     		ldr	r3, .L138
 972 0002 1888     		ldrh	r0, [r3]
 973 0004 7047     		bx	lr
 974              	.L139:
 975 0006 00BF     		.align	2
 976              	.L138:
 977 0008 00000000 		.word	.LANCHOR1
 979              		.section	.text.LCD_getHeight,"ax",%progbits
 980              		.align	1
 981              		.global	LCD_getHeight
 982              		.thumb
 983              		.thumb_func
 985              	LCD_getHeight:
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 989 0000 014B     		ldr	r3, .L141
 990 0002 1888     		ldrh	r0, [r3]
 991 0004 7047     		bx	lr
 992              	.L142:
 993 0006 00BF     		.align	2
 994              	.L141:
 995 0008 00000000 		.word	.LANCHOR0
 997              		.section	.text.LCD_Draw_Char,"ax",%progbits
 998              		.align	1
 999              		.global	LCD_Draw_Char
 1000              		.thumb
 1001              		.thumb_func
 1003              	LCD_Draw_Char:
 1004              		@ args = 8, pretend = 0, frame = 16
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1007 0004 1F28     		cmp	r0, #31
 1008 0006 88BF     		it	hi
 1009 0008 2038     		subhi	r0, r0, #32
 1010 000a 87B0     		sub	sp, sp, #28
 1011 000c 88BF     		it	hi
 1012 000e C0B2     		uxtbhi	r0, r0
 1013 0010 BDF84060 		ldrh	r6, [sp, #64]
 1014 0014 1F46     		mov	r7, r3
 1015 0016 C000     		lsls	r0, r0, #3
 1016 0018 0023     		movs	r3, #0
 1017              	.L145:
 1018 001a 204C     		ldr	r4, .L155
ARM GAS  /tmp/ccDaY04z.s 			page 18


 1019 001c C518     		adds	r5, r0, r3
 1020 001e 2C5D     		ldrb	r4, [r5, r4]	@ zero_extendqisi2
 1021 0020 0DF11009 		add	r9, sp, #16
 1022 0024 03F80940 		strb	r4, [r3, r9]
 1023 0028 0133     		adds	r3, r3, #1
 1024 002a 082B     		cmp	r3, #8
 1025 002c F5D1     		bne	.L145
 1026 002e BDF84430 		ldrh	r3, [sp, #68]
 1027 0032 1FFA82FA 		uxth	r10, r2
 1028 0036 F200     		lsls	r2, r6, #3
 1029 0038 8CB2     		uxth	r4, r1
 1030 003a 92B2     		uxth	r2, r2
 1031 003c 0093     		str	r3, [sp]
 1032 003e 2046     		mov	r0, r4
 1033 0040 5146     		mov	r1, r10
 1034 0042 1346     		mov	r3, r2
 1035 0044 FFF7FEFF 		bl	LCD_fillRect
 1036 0048 4FF0070B 		mov	fp, #7
 1037              	.L146:
 1038 004c 5546     		mov	r5, r10
 1039 004e 4FF0010C 		mov	ip, #1
 1040 0052 0CFA0BFC 		lsl	ip, ip, fp
 1041 0056 4FF00008 		mov	r8, #0
 1042              	.L148:
 1043 005a 19F80830 		ldrb	r3, [r9, r8]	@ zero_extendqisi2
 1044 005e 13EA0C0F 		tst	r3, ip
 1045 0062 0AD0     		beq	.L147
 1046 0064 0097     		str	r7, [sp]
 1047 0066 2046     		mov	r0, r4
 1048 0068 2946     		mov	r1, r5
 1049 006a 3246     		mov	r2, r6
 1050 006c 3346     		mov	r3, r6
 1051 006e CDF80CC0 		str	ip, [sp, #12]
 1052 0072 FFF7FEFF 		bl	LCD_fillRect
 1053 0076 DDF80CC0 		ldr	ip, [sp, #12]
 1054              	.L147:
 1055 007a 08F10108 		add	r8, r8, #1
 1056 007e 3544     		add	r5, r5, r6
 1057 0080 B8F1080F 		cmp	r8, #8
 1058 0084 ADB2     		uxth	r5, r5
 1059 0086 E8D1     		bne	.L148
 1060 0088 0BF1FF3B 		add	fp, fp, #-1
 1061 008c 3444     		add	r4, r4, r6
 1062 008e BBF1FF3F 		cmp	fp, #-1
 1063 0092 A4B2     		uxth	r4, r4
 1064 0094 DAD1     		bne	.L146
 1065 0096 07B0     		add	sp, sp, #28
 1066              		@ sp needed
 1067 0098 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1068              	.L156:
 1069              		.align	2
 1070              	.L155:
 1071 009c 003D0000 		.word	ROM+15616
 1073              		.section	.text.LCD_Draw_Text,"ax",%progbits
 1074              		.align	1
 1075              		.global	LCD_Draw_Text
 1076              		.thumb
ARM GAS  /tmp/ccDaY04z.s 			page 19


 1077              		.thumb_func
 1079              	LCD_Draw_Text:
 1080              		@ args = 8, pretend = 0, frame = 0
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082 0000 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 1083 0004 0C46     		mov	r4, r1
 1084 0006 1746     		mov	r7, r2
 1085 0008 9946     		mov	r9, r3
 1086 000a BDF82860 		ldrh	r6, [sp, #40]
 1087 000e BDF82C80 		ldrh	r8, [sp, #44]
 1088 0012 F500     		lsls	r5, r6, #3
 1089 0014 ADB2     		uxth	r5, r5
 1090 0016 00F1FF3A 		add	r10, r0, #-1
 1091              	.L158:
 1092 001a 1AF8010F 		ldrb	r0, [r10, #1]!	@ zero_extendqisi2
 1093 001e 48B1     		cbz	r0, .L160
 1094 0020 2146     		mov	r1, r4
 1095 0022 8DE84001 		stmia	sp, {r6, r8}
 1096 0026 3A46     		mov	r2, r7
 1097 0028 4B46     		mov	r3, r9
 1098 002a 2C44     		add	r4, r4, r5
 1099 002c FFF7FEFF 		bl	LCD_Draw_Char
 1100 0030 24B2     		sxth	r4, r4
 1101 0032 F2E7     		b	.L158
 1102              	.L160:
 1103 0034 02B0     		add	sp, sp, #8
 1104              		@ sp needed
 1105 0036 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1107              		.section	.data.screen_height,"aw",%progbits
 1108              		.align	1
 1109              		.set	.LANCHOR0,. + 0
 1112              	screen_height:
 1113 0000 4001     		.short	320
 1114              		.section	.rodata.init_commands,"a",%progbits
 1115              		.set	.LANCHOR2,. + 0
 1118              	init_commands:
 1119 0000 06       		.byte	6
 1120 0001 CB       		.byte	-53
 1121 0002 39       		.byte	57
 1122 0003 2C       		.byte	44
 1123 0004 00       		.byte	0
 1124 0005 34       		.byte	52
 1125 0006 02       		.byte	2
 1126 0007 04       		.byte	4
 1127 0008 CF       		.byte	-49
 1128 0009 00       		.byte	0
 1129 000a C1       		.byte	-63
 1130 000b 30       		.byte	48
 1131 000c 04       		.byte	4
 1132 000d E8       		.byte	-24
 1133 000e 85       		.byte	-123
 1134 000f 00       		.byte	0
 1135 0010 78       		.byte	120
 1136 0011 03       		.byte	3
 1137 0012 EA       		.byte	-22
 1138 0013 00       		.byte	0
 1139 0014 00       		.byte	0
ARM GAS  /tmp/ccDaY04z.s 			page 20


 1140 0015 05       		.byte	5
 1141 0016 ED       		.byte	-19
 1142 0017 64       		.byte	100
 1143 0018 03       		.byte	3
 1144 0019 12       		.byte	18
 1145 001a 81       		.byte	-127
 1146 001b 02       		.byte	2
 1147 001c F7       		.byte	-9
 1148 001d 20       		.byte	32
 1149 001e 02       		.byte	2
 1150 001f C0       		.byte	-64
 1151 0020 10       		.byte	16
 1152 0021 02       		.byte	2
 1153 0022 C1       		.byte	-63
 1154 0023 10       		.byte	16
 1155 0024 03       		.byte	3
 1156 0025 C5       		.byte	-59
 1157 0026 3E       		.byte	62
 1158 0027 28       		.byte	40
 1159 0028 02       		.byte	2
 1160 0029 C7       		.byte	-57
 1161 002a 86       		.byte	-122
 1162 002b 02       		.byte	2
 1163 002c 36       		.byte	54
 1164 002d 48       		.byte	72
 1165 002e 02       		.byte	2
 1166 002f 3A       		.byte	58
 1167 0030 66       		.byte	102
 1168 0031 03       		.byte	3
 1169 0032 B1       		.byte	-79
 1170 0033 00       		.byte	0
 1171 0034 32       		.byte	50
 1172 0035 04       		.byte	4
 1173 0036 B6       		.byte	-74
 1174 0037 08       		.byte	8
 1175 0038 82       		.byte	-126
 1176 0039 27       		.byte	39
 1177 003a 02       		.byte	2
 1178 003b F2       		.byte	-14
 1179 003c 00       		.byte	0
 1180 003d 02       		.byte	2
 1181 003e 26       		.byte	38
 1182 003f 01       		.byte	1
 1183 0040 10       		.byte	16
 1184 0041 E0       		.byte	-32
 1185 0042 0F       		.byte	15
 1186 0043 31       		.byte	49
 1187 0044 2B       		.byte	43
 1188 0045 0C       		.byte	12
 1189 0046 0E       		.byte	14
 1190 0047 08       		.byte	8
 1191 0048 4E       		.byte	78
 1192 0049 F1       		.byte	-15
 1193 004a 37       		.byte	55
 1194 004b 07       		.byte	7
 1195 004c 10       		.byte	16
 1196 004d 03       		.byte	3
ARM GAS  /tmp/ccDaY04z.s 			page 21


 1197 004e 0E       		.byte	14
 1198 004f 09       		.byte	9
 1199 0050 00       		.byte	0
 1200 0051 10       		.byte	16
 1201 0052 E1       		.byte	-31
 1202 0053 00       		.byte	0
 1203 0054 0E       		.byte	14
 1204 0055 14       		.byte	20
 1205 0056 03       		.byte	3
 1206 0057 11       		.byte	17
 1207 0058 07       		.byte	7
 1208 0059 31       		.byte	49
 1209 005a C1       		.byte	-63
 1210 005b 48       		.byte	72
 1211 005c 08       		.byte	8
 1212 005d 0F       		.byte	15
 1213 005e 0C       		.byte	12
 1214 005f 31       		.byte	49
 1215 0060 36       		.byte	54
 1216 0061 0F       		.byte	15
 1217 0062 00       		.byte	0
 1218              		.section	.data.screen_width,"aw",%progbits
 1219              		.align	1
 1220              		.set	.LANCHOR1,. + 0
 1223              	screen_width:
 1224 0000 F000     		.short	240
 1225              		.ident	"GCC: (15:4.9.3+svn231177-1) 4.9.3 20150529 (prerelease)"
ARM GAS  /tmp/ccDaY04z.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 core.c
     /tmp/ccDaY04z.s:16     .text.SPIx_WriteF:0000000000000000 $t
     /tmp/ccDaY04z.s:21     .text.SPIx_WriteF:0000000000000000 SPIx_WriteF
     /tmp/ccDaY04z.s:36     .text.SPIx_WriteF:0000000000000010 $d
     /tmp/ccDaY04z.s:39     .text.SPIx_ReadF:0000000000000000 $t
     /tmp/ccDaY04z.s:44     .text.SPIx_ReadF:0000000000000000 SPIx_ReadF
     /tmp/ccDaY04z.s:60     .text.SPIx_ReadF:0000000000000010 $d
     /tmp/ccDaY04z.s:63     .text.dmaSendCmdCont:0000000000000000 $t
     /tmp/ccDaY04z.s:68     .text.dmaSendCmdCont:0000000000000000 dmaSendCmdCont
     /tmp/ccDaY04z.s:133    .text.dmaSendCmdCont:0000000000000084 $d
     /tmp/ccDaY04z.s:138    .text.dmaSendDataCont8:0000000000000000 $t
     /tmp/ccDaY04z.s:143    .text.dmaSendDataCont8:0000000000000000 dmaSendDataCont8
     /tmp/ccDaY04z.s:173    .text.dmaSendDataCont8:0000000000000030 $d
     /tmp/ccDaY04z.s:177    .text.color_convert:0000000000000000 $t
     /tmp/ccDaY04z.s:182    .text.color_convert:0000000000000000 color_convert
     /tmp/ccDaY04z.s:197    .text.dmaSendDataCont16:0000000000000000 $t
     /tmp/ccDaY04z.s:202    .text.dmaSendDataCont16:0000000000000000 dmaSendDataCont16
     /tmp/ccDaY04z.s:237    .text.dmaSendDataCont16:0000000000000040 $d
     /tmp/ccDaY04z.s:241    .text.dmaFill16:0000000000000000 $t
     /tmp/ccDaY04z.s:246    .text.dmaFill16:0000000000000000 dmaFill16
     /tmp/ccDaY04z.s:288    .text.dmaFill16:0000000000000058 $d
     /tmp/ccDaY04z.s:293    .text.dmaFill16_2:0000000000000000 $t
     /tmp/ccDaY04z.s:298    .text.dmaFill16_2:0000000000000000 dmaFill16_2
     /tmp/ccDaY04z.s:350    .text.dmaFill16_2:000000000000007c $d
     /tmp/ccDaY04z.s:355    .text.LCD_reset:0000000000000000 $t
     /tmp/ccDaY04z.s:360    .text.LCD_reset:0000000000000000 LCD_reset
     /tmp/ccDaY04z.s:381    .text.LCD_reset:0000000000000028 $d
     /tmp/ccDaY04z.s:385    .text.LCD_exitStandby:0000000000000000 $t
     /tmp/ccDaY04z.s:390    .text.LCD_exitStandby:0000000000000000 LCD_exitStandby
     /tmp/ccDaY04z.s:408    .text.LCD_exitStandby:0000000000000020 $d
     /tmp/ccDaY04z.s:411    .text.LCD_idle:0000000000000000 $t
     /tmp/ccDaY04z.s:416    .text.LCD_idle:0000000000000000 LCD_idle
     /tmp/ccDaY04z.s:432    .text.LCD_idle:0000000000000018 $d
     /tmp/ccDaY04z.s:435    .text.LCD_readSometing:0000000000000000 $t
     /tmp/ccDaY04z.s:440    .text.LCD_readSometing:0000000000000000 LCD_readSometing
     /tmp/ccDaY04z.s:476    .text.LCD_readSometing:0000000000000048 $d
     /tmp/ccDaY04z.s:480    .text.LCD_setOrientation:0000000000000000 $t
     /tmp/ccDaY04z.s:485    .text.LCD_setOrientation:0000000000000000 LCD_setOrientation
     /tmp/ccDaY04z.s:521    .text.LCD_setOrientation:0000000000000044 $d
     /tmp/ccDaY04z.s:526    .text.LCD_init:0000000000000000 $t
     /tmp/ccDaY04z.s:531    .text.LCD_init:0000000000000000 LCD_init
     /tmp/ccDaY04z.s:580    .text.LCD_init:000000000000006c $d
     /tmp/ccDaY04z.s:585    .text.LCD_setAddressWindow:0000000000000000 $t
     /tmp/ccDaY04z.s:590    .text.LCD_setAddressWindow:0000000000000000 LCD_setAddressWindow
     /tmp/ccDaY04z.s:617    .text.LCD_Write64bytes:0000000000000000 $t
     /tmp/ccDaY04z.s:622    .text.LCD_Write64bytes:0000000000000000 LCD_Write64bytes
     /tmp/ccDaY04z.s:663    .text.LCD_Write64bytes:000000000000005c $d
     /tmp/ccDaY04z.s:667    .text.LCD_Read64bytes:0000000000000000 $t
     /tmp/ccDaY04z.s:672    .text.LCD_Read64bytes:0000000000000000 LCD_Read64bytes
     /tmp/ccDaY04z.s:726    .text.LCD_Read64bytes:0000000000000084 $d
     /tmp/ccDaY04z.s:730    .text.LCD_Write8x8line:0000000000000000 $t
     /tmp/ccDaY04z.s:735    .text.LCD_Write8x8line:0000000000000000 LCD_Write8x8line
     /tmp/ccDaY04z.s:773    .text.LCD_Write8x8line:0000000000000054 $d
     /tmp/ccDaY04z.s:777    .text.LCD_FullRect3:0000000000000000 $t
     /tmp/ccDaY04z.s:782    .text.LCD_FullRect3:0000000000000000 LCD_FullRect3
     /tmp/ccDaY04z.s:830    .text.LCD_FullRect3:0000000000000060 $d
ARM GAS  /tmp/ccDaY04z.s 			page 23


     /tmp/ccDaY04z.s:835    .text.LCD_FullRect6:0000000000000000 $t
     /tmp/ccDaY04z.s:840    .text.LCD_FullRect6:0000000000000000 LCD_FullRect6
     /tmp/ccDaY04z.s:897    .text.LCD_FullRect6:0000000000000078 $d
     /tmp/ccDaY04z.s:902    .text.LCD_fillRect:0000000000000000 $t
     /tmp/ccDaY04z.s:907    .text.LCD_fillRect:0000000000000000 LCD_fillRect
     /tmp/ccDaY04z.s:930    .text.LCD_fillRect2:0000000000000000 $t
     /tmp/ccDaY04z.s:935    .text.LCD_fillRect2:0000000000000000 LCD_fillRect2
     /tmp/ccDaY04z.s:962    .text.LCD_getWidth:0000000000000000 $t
     /tmp/ccDaY04z.s:967    .text.LCD_getWidth:0000000000000000 LCD_getWidth
     /tmp/ccDaY04z.s:977    .text.LCD_getWidth:0000000000000008 $d
     /tmp/ccDaY04z.s:980    .text.LCD_getHeight:0000000000000000 $t
     /tmp/ccDaY04z.s:985    .text.LCD_getHeight:0000000000000000 LCD_getHeight
     /tmp/ccDaY04z.s:995    .text.LCD_getHeight:0000000000000008 $d
     /tmp/ccDaY04z.s:998    .text.LCD_Draw_Char:0000000000000000 $t
     /tmp/ccDaY04z.s:1003   .text.LCD_Draw_Char:0000000000000000 LCD_Draw_Char
     /tmp/ccDaY04z.s:1071   .text.LCD_Draw_Char:000000000000009c $d
     /tmp/ccDaY04z.s:1074   .text.LCD_Draw_Text:0000000000000000 $t
     /tmp/ccDaY04z.s:1079   .text.LCD_Draw_Text:0000000000000000 LCD_Draw_Text
     /tmp/ccDaY04z.s:1108   .data.screen_height:0000000000000000 $d
     /tmp/ccDaY04z.s:1112   .data.screen_height:0000000000000000 screen_height
     /tmp/ccDaY04z.s:1118   .rodata.init_commands:0000000000000000 init_commands
     /tmp/ccDaY04z.s:1219   .data.screen_width:0000000000000000 $d
     /tmp/ccDaY04z.s:1223   .data.screen_width:0000000000000000 screen_width

UNDEFINED SYMBOLS
hspi1
SPIx_WriteReadData1
HAL_SPI_DeInit
MX_SPI1_Init
HAL_Delay
ROM
