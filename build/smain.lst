ARM GAS  /tmp/ccy0i7s0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"smain.c"
  15              		.section	.text.clearAttr,"ax",%progbits
  16              		.align	1
  17              		.global	clearAttr
  18              		.thumb
  19              		.thumb_func
  21              	clearAttr:
  22              		@ args = 0, pretend = 0, frame = 0
  23              		@ frame_needed = 0, uses_anonymous_args = 0
  24              		@ link register save eliminated.
  25 0000 0023     		movs	r3, #0
  26              	.L2:
  27 0002 034A     		ldr	r2, .L5
  28 0004 0021     		movs	r1, #0
  29 0006 9954     		strb	r1, [r3, r2]
  30 0008 0133     		adds	r3, r3, #1
  31 000a 602B     		cmp	r3, #96
  32 000c F9D1     		bne	.L2
  33 000e 7047     		bx	lr
  34              	.L6:
  35              		.align	2
  36              	.L5:
  37 0010 00000000 		.word	ATTR_RAM_MOD
  39              		.section	.text.setAttr,"ax",%progbits
  40              		.align	1
  41              		.global	setAttr
  42              		.thumb
  43              		.thumb_func
  45              	setAttr:
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49 0000 0023     		movs	r3, #0
  50              	.L8:
  51 0002 034A     		ldr	r2, .L10
  52 0004 FF21     		movs	r1, #255
  53 0006 9954     		strb	r1, [r3, r2]
  54 0008 0133     		adds	r3, r3, #1
  55 000a 602B     		cmp	r3, #96
  56 000c F9D1     		bne	.L8
  57 000e 7047     		bx	lr
  58              	.L11:
  59              		.align	2
  60              	.L10:
ARM GAS  /tmp/ccy0i7s0.s 			page 2


  61 0010 00000000 		.word	ATTR_RAM_MOD
  63              		.section	.text.clearKeys,"ax",%progbits
  64              		.align	1
  65              		.global	clearKeys
  66              		.thumb
  67              		.thumb_func
  69              	clearKeys:
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 054B     		ldr	r3, .L13
  74 0002 FF22     		movs	r2, #255
  75 0004 1A70     		strb	r2, [r3]
  76 0006 5A70     		strb	r2, [r3, #1]
  77 0008 9A70     		strb	r2, [r3, #2]
  78 000a DA70     		strb	r2, [r3, #3]
  79 000c 1A71     		strb	r2, [r3, #4]
  80 000e 5A71     		strb	r2, [r3, #5]
  81 0010 9A71     		strb	r2, [r3, #6]
  82 0012 DA71     		strb	r2, [r3, #7]
  83 0014 7047     		bx	lr
  84              	.L14:
  85 0016 00BF     		.align	2
  86              	.L13:
  87 0018 00000000 		.word	.LANCHOR0
  89              		.section	.text.setRes,"ax",%progbits
  90              		.align	1
  91              		.global	setRes
  92              		.thumb
  93              		.thumb_func
  95              	setRes:
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98 0000 0123     		movs	r3, #1
  99 0002 10B5     		push	{r4, lr}
 100 0004 0838     		subs	r0, r0, #8
 101 0006 054C     		ldr	r4, .L19
 102 0008 8B40     		lsls	r3, r3, r1
 103 000a 12B1     		cbz	r2, .L16
 104 000c 225C     		ldrb	r2, [r4, r0]	@ zero_extendqisi2
 105 000e 1343     		orrs	r3, r3, r2
 106 0010 02E0     		b	.L18
 107              	.L16:
 108 0012 225C     		ldrb	r2, [r4, r0]	@ zero_extendqisi2
 109 0014 22EA0303 		bic	r3, r2, r3
 110              	.L18:
 111 0018 2354     		strb	r3, [r4, r0]
 112 001a 10BD     		pop	{r4, pc}
 113              	.L20:
 114              		.align	2
 115              	.L19:
 116 001c 00000000 		.word	.LANCHOR0
 118              		.section	.text.keyScan,"ax",%progbits
 119              		.align	1
 120              		.global	keyScan
 121              		.thumb
 122              		.thumb_func
ARM GAS  /tmp/ccy0i7s0.s 			page 3


 124              	keyScan:
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 128 0002 524B     		ldr	r3, .L30
 129 0004 5249     		ldr	r1, .L30+4
 130 0006 9C68     		ldr	r4, [r3, #8]
 131 0008 524B     		ldr	r3, .L30+8
 132 000a C4F3CF04 		ubfx	r4, r4, #3, #16
 133 000e 1D68     		ldr	r5, [r3]
 134 0010 04F07F07 		and	r7, r4, #127
 135 0014 0026     		movs	r6, #0
 136 0016 0E70     		strb	r6, [r1]
 137 0018 87F07F07 		eor	r7, r7, #127
 138 001c 05BB     		cbnz	r5, .L22
 139 001e 0C20     		movs	r0, #12
 140 0020 0321     		movs	r1, #3
 141 0022 04F01002 		and	r2, r4, #16
 142 0026 FFF7FEFF 		bl	setRes
 143 002a 0C20     		movs	r0, #12
 144 002c 0421     		movs	r1, #4
 145 002e 04F00102 		and	r2, r4, #1
 146 0032 FFF7FEFF 		bl	setRes
 147 0036 0421     		movs	r1, #4
 148 0038 04EA0102 		and	r2, r4, r1
 149 003c 0B20     		movs	r0, #11
 150 003e FFF7FEFF 		bl	setRes
 151 0042 0C20     		movs	r0, #12
 152 0044 0221     		movs	r1, #2
 153 0046 04F00802 		and	r2, r4, #8
 154 004a FFF7FEFF 		bl	setRes
 155 004e 0C20     		movs	r0, #12
 156 0050 2946     		mov	r1, r5
 157 0052 04F02002 		and	r2, r4, #32
 158 0056 FFF7FEFF 		bl	setRes
 159 005a 0F20     		movs	r0, #15
 160 005c 2946     		mov	r1, r5
 161 005e 21E0     		b	.L27
 162              	.L22:
 163 0060 012D     		cmp	r5, #1
 164 0062 24D1     		bne	.L24
 165 0064 0C20     		movs	r0, #12
 166 0066 2946     		mov	r1, r5
 167 0068 04F01002 		and	r2, r4, #16
 168 006c FFF7FEFF 		bl	setRes
 169 0070 0C20     		movs	r0, #12
 170 0072 0221     		movs	r1, #2
 171 0074 04F00102 		and	r2, r4, #1
 172 0078 FFF7FEFF 		bl	setRes
 173 007c 0421     		movs	r1, #4
 174 007e 04EA0102 		and	r2, r4, r1
 175 0082 0C20     		movs	r0, #12
 176 0084 FFF7FEFF 		bl	setRes
 177 0088 0C20     		movs	r0, #12
 178 008a 0321     		movs	r1, #3
 179 008c 04F00802 		and	r2, r4, #8
 180 0090 FFF7FEFF 		bl	setRes
ARM GAS  /tmp/ccy0i7s0.s 			page 4


 181 0094 3146     		mov	r1, r6
 182 0096 0C20     		movs	r0, #12
 183              	.L29:
 184 0098 04F02002 		and	r2, r4, #32
 185 009c FFF7FEFF 		bl	setRes
 186 00a0 0F20     		movs	r0, #15
 187              	.L28:
 188 00a2 3146     		mov	r1, r6
 189              	.L27:
 190 00a4 04F00202 		and	r2, r4, #2
 191 00a8 FFF7FEFF 		bl	setRes
 192 00ac 4CE0     		b	.L23
 193              	.L24:
 194 00ae 022D     		cmp	r5, #2
 195 00b0 1AD1     		bne	.L25
 196 00b2 0B20     		movs	r0, #11
 197 00b4 0321     		movs	r1, #3
 198 00b6 04F01002 		and	r2, r4, #16
 199 00ba FFF7FEFF 		bl	setRes
 200 00be 0B20     		movs	r0, #11
 201 00c0 2946     		mov	r1, r5
 202 00c2 04F00102 		and	r2, r4, #1
 203 00c6 FFF7FEFF 		bl	setRes
 204 00ca 0B20     		movs	r0, #11
 205 00cc 3146     		mov	r1, r6
 206 00ce 04F00402 		and	r2, r4, #4
 207 00d2 FFF7FEFF 		bl	setRes
 208 00d6 0B20     		movs	r0, #11
 209 00d8 0121     		movs	r1, #1
 210 00da 04F00802 		and	r2, r4, #8
 211 00de FFF7FEFF 		bl	setRes
 212 00e2 0B20     		movs	r0, #11
 213 00e4 0421     		movs	r1, #4
 214 00e6 D7E7     		b	.L29
 215              	.L25:
 216 00e8 032D     		cmp	r5, #3
 217 00ea 1FD1     		bne	.L26
 218 00ec 0920     		movs	r0, #9
 219 00ee 3146     		mov	r1, r6
 220 00f0 04F01002 		and	r2, r4, #16
 221 00f4 FFF7FEFF 		bl	setRes
 222 00f8 0121     		movs	r1, #1
 223 00fa 04EA0102 		and	r2, r4, r1
 224 00fe 0820     		movs	r0, #8
 225 0100 FFF7FEFF 		bl	setRes
 226 0104 0A20     		movs	r0, #10
 227 0106 3146     		mov	r1, r6
 228 0108 04F00402 		and	r2, r4, #4
 229 010c FFF7FEFF 		bl	setRes
 230 0110 0A20     		movs	r0, #10
 231 0112 0121     		movs	r1, #1
 232 0114 04F00802 		and	r2, r4, #8
 233 0118 FFF7FEFF 		bl	setRes
 234 011c 0F20     		movs	r0, #15
 235 011e 3146     		mov	r1, r6
 236 0120 04F02002 		and	r2, r4, #32
 237 0124 FFF7FEFF 		bl	setRes
ARM GAS  /tmp/ccy0i7s0.s 			page 5


 238 0128 0E20     		movs	r0, #14
 239 012a BAE7     		b	.L28
 240              	.L26:
 241 012c 042D     		cmp	r5, #4
 242 012e 0BD1     		bne	.L23
 243 0130 BBB2     		uxth	r3, r7
 244 0132 03F03402 		and	r2, r3, #52
 245 0136 03F00100 		and	r0, r3, #1
 246 013a 5210     		asrs	r2, r2, #1
 247 013c 42EA8002 		orr	r2, r2, r0, lsl #2
 248 0140 C3F3C003 		ubfx	r3, r3, #3, #1
 249 0144 1343     		orrs	r3, r3, r2
 250 0146 0B70     		strb	r3, [r1]
 251              	.L23:
 252 0148 3846     		mov	r0, r7
 253 014a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 254              	.L31:
 255              		.align	2
 256              	.L30:
 257 014c 000C0140 		.word	1073810432
 258 0150 00000000 		.word	.LANCHOR1
 259 0154 00000000 		.word	.LANCHOR2
 261              		.section	.text.in,"ax",%progbits
 262              		.align	1
 263              		.global	in
 264              		.thumb
 265              		.thumb_func
 267              	in:
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270 0000 C3B2     		uxtb	r3, r0
 271 0002 1F2B     		cmp	r3, #31
 272 0004 10B5     		push	{r4, lr}
 273 0006 0446     		mov	r4, r0
 274 0008 04D1     		bne	.L33
 275 000a FFF7FEFF 		bl	keyScan
 276 000e 0D4B     		ldr	r3, .L39
 277 0010 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 278 0012 10BD     		pop	{r4, pc}
 279              	.L33:
 280 0014 FE2B     		cmp	r3, #254
 281 0016 12D1     		bne	.L37
 282 0018 FFF7FEFF 		bl	keyScan
 283 001c 0823     		movs	r3, #8
 284 001e FF20     		movs	r0, #255
 285              	.L36:
 286 0020 44FA03F2 		asr	r2, r4, r3
 287 0024 D207     		lsls	r2, r2, #31
 288 0026 5EBF     		ittt	pl
 289 0028 074A     		ldrpl	r2, .L39+4
 290 002a D218     		addpl	r2, r2, r3
 291 002c 12F8082C 		ldrbpl	r2, [r2, #-8]	@ zero_extendqisi2
 292 0030 03F10103 		add	r3, r3, #1
 293 0034 58BF     		it	pl
 294 0036 1040     		andpl	r0, r0, r2
 295 0038 102B     		cmp	r3, #16
 296 003a F1D1     		bne	.L36
ARM GAS  /tmp/ccy0i7s0.s 			page 6


 297 003c 10BD     		pop	{r4, pc}
 298              	.L37:
 299 003e FF20     		movs	r0, #255
 300 0040 10BD     		pop	{r4, pc}
 301              	.L40:
 302 0042 00BF     		.align	2
 303              	.L39:
 304 0044 00000000 		.word	.LANCHOR1
 305 0048 00000000 		.word	.LANCHOR0
 307              		.section	.text.out,"ax",%progbits
 308              		.align	1
 309              		.global	out
 310              		.thumb
 311              		.thumb_func
 313              	out:
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 0000 C0B2     		uxtb	r0, r0
 318 0002 FE28     		cmp	r0, #254
 319 0004 0AD1     		bne	.L41
 320 0006 064B     		ldr	r3, .L45
 321 0008 11F0180F 		tst	r1, #24
 322 000c 1980     		strh	r1, [r3]	@ movhi
 323 000e 054B     		ldr	r3, .L45+4
 324 0010 14BF     		ite	ne
 325 0012 4FF40052 		movne	r2, #8192
 326 0016 4FF00052 		moveq	r2, #536870912
 327 001a 1A61     		str	r2, [r3, #16]
 328              	.L41:
 329 001c 7047     		bx	lr
 330              	.L46:
 331 001e 00BF     		.align	2
 332              	.L45:
 333 0020 00000000 		.word	border
 334 0024 000C0140 		.word	1073810432
 336              		.section	.text.printNum,"ax",%progbits
 337              		.align	1
 338              		.global	printNum
 339              		.thumb
 340              		.thumb_func
 342              	printNum:
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345 0000 30B5     		push	{r4, r5, lr}
 346 0002 0028     		cmp	r0, #0
 347 0004 B4BF     		ite	lt
 348 0006 4FF0FF34 		movlt	r4, #-1
 349 000a 0124     		movge	r4, #1
 350 000c 2146     		mov	r1, r4
 351 000e 4143     		muls	r1, r0, r1
 352 0010 0E4B     		ldr	r3, .L55
 353 0012 4FF00002 		mov	r2, #0
 354 0016 DA77     		strb	r2, [r3, #31]
 355 0018 4FF03002 		mov	r2, #48
 356 001c 9A77     		strb	r2, [r3, #30]
 357 001e 03F11E00 		add	r0, r3, #30
ARM GAS  /tmp/ccy0i7s0.s 			page 7


 358 0022 12D0     		beq	.L49
 359              	.L50:
 360 0024 0A23     		movs	r3, #10
 361 0026 91FBF3F5 		sdiv	r5, r1, r3
 362 002a 0246     		mov	r2, r0
 363 002c 03FB1513 		mls	r3, r3, r5, r1
 364 0030 3033     		adds	r3, r3, #48
 365 0032 02F80139 		strb	r3, [r2], #-1
 366 0036 2946     		mov	r1, r5
 367 0038 0DB1     		cbz	r5, .L54
 368 003a 1046     		mov	r0, r2
 369 003c F2E7     		b	.L50
 370              	.L54:
 371 003e 0134     		adds	r4, r4, #1
 372 0040 03D1     		bne	.L49
 373 0042 2D23     		movs	r3, #45
 374 0044 1370     		strb	r3, [r2]
 375 0046 1046     		mov	r0, r2
 376 0048 30BD     		pop	{r4, r5, pc}
 377              	.L49:
 378 004a 30BD     		pop	{r4, r5, pc}
 379              	.L56:
 380              		.align	2
 381              	.L55:
 382 004c 00000000 		.word	.LANCHOR3
 384              		.global	__aeabi_uldivmod
 385              		.section	.text.printNumU,"ax",%progbits
 386              		.align	1
 387              		.global	printNumU
 388              		.thumb
 389              		.thumb_func
 391              	printNumU:
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 395 0002 0646     		mov	r6, r0
 396 0004 0F46     		mov	r7, r1
 397 0006 114C     		ldr	r4, .L62
 398 0008 0023     		movs	r3, #0
 399 000a E377     		strb	r3, [r4, #31]
 400 000c 3023     		movs	r3, #48
 401 000e A377     		strb	r3, [r4, #30]
 402 0010 56EA0703 		orrs	r3, r6, r7
 403 0014 04F11E04 		add	r4, r4, #30
 404 0018 16D0     		beq	.L58
 405              	.L59:
 406 001a 3046     		mov	r0, r6
 407 001c 3946     		mov	r1, r7
 408 001e 0A22     		movs	r2, #10
 409 0020 0023     		movs	r3, #0
 410 0022 FFF7FEFF 		bl	__aeabi_uldivmod
 411 0026 2546     		mov	r5, r4
 412 0028 3032     		adds	r2, r2, #48
 413 002a 05F80129 		strb	r2, [r5], #-1
 414 002e 3046     		mov	r0, r6
 415 0030 3946     		mov	r1, r7
 416 0032 0023     		movs	r3, #0
ARM GAS  /tmp/ccy0i7s0.s 			page 8


 417 0034 0A22     		movs	r2, #10
 418 0036 FFF7FEFF 		bl	__aeabi_uldivmod
 419 003a 0646     		mov	r6, r0
 420 003c 0F46     		mov	r7, r1
 421 003e 56EA0703 		orrs	r3, r6, r7
 422 0042 01D0     		beq	.L58
 423 0044 2C46     		mov	r4, r5
 424 0046 E8E7     		b	.L59
 425              	.L58:
 426 0048 2046     		mov	r0, r4
 427 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 428              	.L63:
 429              		.align	2
 430              	.L62:
 431 004c 00000000 		.word	.LANCHOR4
 433              		.section	.text.printNum16,"ax",%progbits
 434              		.align	1
 435              		.global	printNum16
 436              		.thumb
 437              		.thumb_func
 439              	printNum16:
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443 0000 0B4B     		ldr	r3, .L73
 444 0002 0022     		movs	r2, #0
 445 0004 DA73     		strb	r2, [r3, #15]
 446 0006 3022     		movs	r2, #48
 447 0008 9A73     		strb	r2, [r3, #14]
 448 000a 0246     		mov	r2, r0
 449 000c 03F10E00 		add	r0, r3, #14
 450 0010 6AB1     		cbz	r2, .L69
 451              	.L68:
 452 0012 02F00F03 		and	r3, r2, #15
 453 0016 092B     		cmp	r3, #9
 454 0018 D4BF     		ite	le
 455 001a 3033     		addle	r3, r3, #48
 456 001c 3733     		addgt	r3, r3, #55
 457 001e 1209     		lsrs	r2, r2, #4
 458 0020 0370     		strb	r3, [r0]
 459 0022 00F1FF33 		add	r3, r0, #-1
 460 0026 01D0     		beq	.L72
 461 0028 1846     		mov	r0, r3
 462 002a F2E7     		b	.L68
 463              	.L72:
 464 002c 7047     		bx	lr
 465              	.L69:
 466 002e 7047     		bx	lr
 467              	.L74:
 468              		.align	2
 469              	.L73:
 470 0030 00000000 		.word	.LANCHOR5
 472              		.section	.text.printNum16_2,"ax",%progbits
 473              		.align	1
 474              		.global	printNum16_2
 475              		.thumb
 476              		.thumb_func
ARM GAS  /tmp/ccy0i7s0.s 			page 9


 478              	printNum16_2:
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482 0000 0346     		mov	r3, r0
 483 0002 0648     		ldr	r0, .L76
 484 0004 0022     		movs	r2, #0
 485 0006 8270     		strb	r2, [r0, #2]
 486 0008 03F00F02 		and	r2, r3, #15
 487 000c C3F30313 		ubfx	r3, r3, #4, #4
 488 0010 3032     		adds	r2, r2, #48
 489 0012 3033     		adds	r3, r3, #48
 490 0014 4270     		strb	r2, [r0, #1]
 491 0016 0370     		strb	r3, [r0]
 492 0018 7047     		bx	lr
 493              	.L77:
 494 001a 00BF     		.align	2
 495              	.L76:
 496 001c 00000000 		.word	.LANCHOR6
 498              		.section	.text.paintCross,"ax",%progbits
 499              		.align	1
 500              		.global	paintCross
 501              		.thumb
 502              		.thumb_func
 504              	paintCross:
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 508 0004 1FFA80F8 		uxth	r8, r0
 509 0008 0220     		movs	r0, #2
 510 000a 92FBF0F0 		sdiv	r0, r2, r0
 511 000e 4042     		negs	r0, r0
 512 0010 84B2     		uxth	r4, r0
 513 0012 8EB2     		uxth	r6, r1
 514 0014 95B2     		uxth	r5, r2
 515 0016 9FB2     		uxth	r7, r3
 516 0018 A119     		adds	r1, r4, r6
 517 001a 4046     		mov	r0, r8
 518 001c 2B46     		mov	r3, r5
 519 001e 0097     		str	r7, [sp]
 520 0020 89B2     		uxth	r1, r1
 521 0022 0122     		movs	r2, #1
 522 0024 FFF7FEFF 		bl	LCD_fillRect
 523 0028 08EB0400 		add	r0, r8, r4
 524 002c 0097     		str	r7, [sp]
 525 002e 80B2     		uxth	r0, r0
 526 0030 3146     		mov	r1, r6
 527 0032 2A46     		mov	r2, r5
 528 0034 0123     		movs	r3, #1
 529 0036 FFF7FEFF 		bl	LCD_fillRect
 530 003a 02B0     		add	sp, sp, #8
 531              		@ sp needed
 532 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 534              		.section	.text.clearFullScreen,"ax",%progbits
 535              		.align	1
 536              		.global	clearFullScreen
 537              		.thumb
ARM GAS  /tmp/ccy0i7s0.s 			page 10


 538              		.thumb_func
 540              	clearFullScreen:
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543 0000 13B5     		push	{r0, r1, r4, lr}
 544 0002 FFF7FEFF 		bl	LCD_getWidth
 545 0006 0446     		mov	r4, r0
 546 0008 FFF7FEFF 		bl	LCD_getHeight
 547 000c 0346     		mov	r3, r0
 548 000e 0020     		movs	r0, #0
 549 0010 0090     		str	r0, [sp]
 550 0012 0146     		mov	r1, r0
 551 0014 2246     		mov	r2, r4
 552 0016 FFF7FEFF 		bl	LCD_fillRect
 553 001a 02B0     		add	sp, sp, #8
 554              		@ sp needed
 555 001c 10BD     		pop	{r4, pc}
 557              		.section	.text.initBlocksAndLines,"ax",%progbits
 558              		.align	1
 559              		.global	initBlocksAndLines
 560              		.thumb
 561              		.thumb_func
 563              	initBlocksAndLines:
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566 0000 10B5     		push	{r4, lr}
 567 0002 6FF00401 		mvn	r1, #4
 568 0006 0023     		movs	r3, #0
 569              	.L81:
 570 0008 0022     		movs	r2, #0
 571              	.L89:
 572 000a D01F     		subs	r0, r2, #7
 573 000c 4128     		cmp	r0, #65
 574 000e 04D8     		bhi	.L91
 575 0010 3129     		cmp	r1, #49
 576 0012 94BF     		ite	ls
 577 0014 0020     		movls	r0, #0
 578 0016 0120     		movhi	r0, #1
 579 0018 00E0     		b	.L84
 580              	.L91:
 581 001a 0120     		movs	r0, #1
 582              	.L84:
 583 001c 941F     		subs	r4, r2, #6
 584 001e 412C     		cmp	r4, #65
 585 0020 12D9     		bls	.L85
 586              	.L88:
 587 0022 50B1     		cbz	r0, .L87
 588 0024 1548     		ldr	r0, .L100
 589 0026 4C1D     		adds	r4, r1, #5
 590 0028 00F82320 		strb	r2, [r0, r3, lsl #2]
 591 002c 00EB8300 		add	r0, r0, r3, lsl #2
 592 0030 4470     		strb	r4, [r0, #1]
 593 0032 0133     		adds	r3, r3, #1
 594 0034 0024     		movs	r4, #0
 595 0036 4480     		strh	r4, [r0, #2]	@ movhi
 596 0038 9BB2     		uxth	r3, r3
 597              	.L87:
ARM GAS  /tmp/ccy0i7s0.s 			page 11


 598 003a B3F5257F 		cmp	r3, #660
 599 003e 09D0     		beq	.L82
 600 0040 0232     		adds	r2, r2, #2
 601 0042 502A     		cmp	r2, #80
 602 0044 E1D1     		bne	.L89
 603 0046 02E0     		b	.L83
 604              	.L85:
 605 0048 3129     		cmp	r1, #49
 606 004a F6D9     		bls	.L87
 607 004c E9E7     		b	.L88
 608              	.L83:
 609 004e 0131     		adds	r1, r1, #1
 610 0050 3729     		cmp	r1, #55
 611 0052 D9D1     		bne	.L81
 612              	.L82:
 613 0054 0A4A     		ldr	r2, .L100+4
 614 0056 0023     		movs	r3, #0
 615              	.L90:
 616 0058 0020     		movs	r0, #0
 617 005a 5064     		str	r0, [r2, #68]
 618 005c 0748     		ldr	r0, .L100
 619 005e 99B2     		uxth	r1, r3
 620 0060 00EB8300 		add	r0, r0, r3, lsl #2
 621 0064 0133     		adds	r3, r3, #1
 622 0066 A2F84010 		strh	r1, [r2, #64]	@ movhi
 623 006a 582B     		cmp	r3, #88
 624 006c 41F40051 		orr	r1, r1, #8192
 625 0070 4180     		strh	r1, [r0, #2]	@ movhi
 626 0072 02F14802 		add	r2, r2, #72
 627 0076 EFD1     		bne	.L90
 628 0078 10BD     		pop	{r4, pc}
 629              	.L101:
 630 007a 00BF     		.align	2
 631              	.L100:
 632 007c 00000000 		.word	Blocks
 633 0080 00000000 		.word	Lines
 635              		.section	.text.findOldestLine,"ax",%progbits
 636              		.align	1
 637              		.global	findOldestLine
 638              		.thumb
 639              		.thumb_func
 641              	findOldestLine:
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644 0000 0A4B     		ldr	r3, .L106
 645 0002 30B5     		push	{r4, r5, lr}
 646 0004 1C68     		ldr	r4, [r3]
 647 0006 0023     		movs	r3, #0
 648 0008 1946     		mov	r1, r3
 649 000a 1846     		mov	r0, r3
 650              	.L104:
 651 000c 084D     		ldr	r5, .L106+4
 652 000e 4822     		movs	r2, #72
 653 0010 02FB0352 		mla	r2, r2, r3, r5
 654 0014 526C     		ldr	r2, [r2, #68]
 655 0016 A21A     		subs	r2, r4, r2
 656 0018 8A42     		cmp	r2, r1
ARM GAS  /tmp/ccy0i7s0.s 			page 12


 657 001a C8BF     		it	gt
 658 001c 1846     		movgt	r0, r3
 659 001e 03F10103 		add	r3, r3, #1
 660 0022 C8BF     		it	gt
 661 0024 1146     		movgt	r1, r2
 662 0026 582B     		cmp	r3, #88
 663 0028 F0D1     		bne	.L104
 664 002a 30BD     		pop	{r4, r5, pc}
 665              	.L107:
 666              		.align	2
 667              	.L106:
 668 002c 00000000 		.word	.LANCHOR7
 669 0030 00000000 		.word	Lines
 671              		.section	.text.writeCache64bIfmodified,"ax",%progbits
 672              		.align	1
 673              		.global	writeCache64bIfmodified
 674              		.thumb
 675              		.thumb_func
 677              	writeCache64bIfmodified:
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680 0000 38B5     		push	{r3, r4, r5, lr}
 681 0002 094C     		ldr	r4, .L113
 682 0004 8500     		lsls	r5, r0, #2
 683 0006 6319     		adds	r3, r4, r5
 684 0008 0A46     		mov	r2, r1
 685 000a 5988     		ldrh	r1, [r3, #2]
 686 000c 4904     		lsls	r1, r1, #17
 687 000e 06D5     		bpl	.L109
 688 0010 14F82000 		ldrb	r0, [r4, r0, lsl #2]	@ zero_extendqisi2
 689 0014 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 690 0016 8000     		lsls	r0, r0, #2
 691 0018 8900     		lsls	r1, r1, #2
 692 001a FFF7FEFF 		bl	LCD_Write64bytes
 693              	.L109:
 694 001e 2C44     		add	r4, r4, r5
 695 0020 0023     		movs	r3, #0
 696 0022 6380     		strh	r3, [r4, #2]	@ movhi
 697 0024 38BD     		pop	{r3, r4, r5, pc}
 698              	.L114:
 699 0026 00BF     		.align	2
 700              	.L113:
 701 0028 00000000 		.word	Blocks
 703              		.section	.text.readCache64b,"ax",%progbits
 704              		.align	1
 705              		.global	readCache64b
 706              		.thumb
 707              		.thumb_func
 709              	readCache64b:
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712 0000 70B5     		push	{r4, r5, r6, lr}
 713 0002 0E46     		mov	r6, r1
 714 0004 1546     		mov	r5, r2
 715 0006 074B     		ldr	r3, .L116
 716 0008 45F40055 		orr	r5, r5, #8192
 717 000c 03EB8004 		add	r4, r3, r0, lsl #2
ARM GAS  /tmp/ccy0i7s0.s 			page 13


 718 0010 13F82020 		ldrb	r2, [r3, r0, lsl #2]	@ zero_extendqisi2
 719 0014 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 720 0016 9000     		lsls	r0, r2, #2
 721 0018 8900     		lsls	r1, r1, #2
 722 001a 3246     		mov	r2, r6
 723 001c FFF7FEFF 		bl	LCD_Read64bytes
 724 0020 6580     		strh	r5, [r4, #2]	@ movhi
 725 0022 70BD     		pop	{r4, r5, r6, pc}
 726              	.L117:
 727              		.align	2
 728              	.L116:
 729 0024 00000000 		.word	Blocks
 731              		.section	.text.readByte,"ax",%progbits
 732              		.align	1
 733              		.global	readByte
 734              		.thumb
 735              		.thumb_func
 737              	readByte:
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 741 0004 194B     		ldr	r3, .L121
 742 0006 A0F5B647 		sub	r7, r0, #23296
 743 000a 1A68     		ldr	r2, [r3]
 744 000c C7F38F17 		ubfx	r7, r7, #6, #16
 745 0010 0132     		adds	r2, r2, #1
 746 0012 1A60     		str	r2, [r3]
 747 0014 164A     		ldr	r2, .L121+4
 748 0016 8046     		mov	r8, r0
 749 0018 02EB8702 		add	r2, r2, r7, lsl #2
 750 001c 5288     		ldrh	r2, [r2, #2]
 751 001e 1E46     		mov	r6, r3
 752 0020 12F4005F 		tst	r2, #8192
 753 0024 4FF04805 		mov	r5, #72
 754 0028 124C     		ldr	r4, .L121+8
 755 002a 04D0     		beq	.L119
 756 002c C2F30802 		ubfx	r2, r2, #0, #9
 757 0030 05FB0244 		mla	r4, r5, r2, r4
 758 0034 11E0     		b	.L120
 759              	.L119:
 760 0036 FFF7FEFF 		bl	findOldestLine
 761 003a 8146     		mov	r9, r0
 762 003c 05FB0044 		mla	r4, r5, r0, r4
 763 0040 B4F84000 		ldrh	r0, [r4, #64]
 764 0044 2146     		mov	r1, r4
 765 0046 FFF7FEFF 		bl	writeCache64bIfmodified
 766 004a 3846     		mov	r0, r7
 767 004c 2146     		mov	r1, r4
 768 004e 1FFA89F2 		uxth	r2, r9
 769 0052 FFF7FEFF 		bl	readCache64b
 770 0056 A4F84070 		strh	r7, [r4, #64]	@ movhi
 771              	.L120:
 772 005a 3368     		ldr	r3, [r6]
 773 005c 08F03F08 		and	r8, r8, #63
 774 0060 6364     		str	r3, [r4, #68]
 775 0062 14F80800 		ldrb	r0, [r4, r8]	@ zero_extendqisi2
 776 0066 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccy0i7s0.s 			page 14


 777              	.L122:
 778 006a 00BF     		.align	2
 779              	.L121:
 780 006c 00000000 		.word	.LANCHOR7
 781 0070 00000000 		.word	Blocks
 782 0074 00000000 		.word	Lines
 784              		.section	.text.peek,"ax",%progbits
 785              		.align	1
 786              		.global	peek
 787              		.thumb
 788              		.thumb_func
 790              	peek:
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794 0000 B0F5804F 		cmp	r0, #16384
 795 0004 0346     		mov	r3, r0
 796 0006 01D2     		bcs	.L124
 797 0008 074A     		ldr	r2, .L129
 798 000a 08E0     		b	.L128
 799              	.L124:
 800 000c B0F5B04F 		cmp	r0, #22528
 801 0010 01D2     		bcs	.L126
 802 0012 064A     		ldr	r2, .L129+4
 803 0014 03E0     		b	.L128
 804              	.L126:
 805 0016 B0F5B64F 		cmp	r0, #23296
 806 001a 02D2     		bcs	.L127
 807 001c 044A     		ldr	r2, .L129+8
 808              	.L128:
 809 001e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 810 0020 7047     		bx	lr
 811              	.L127:
 812 0022 FFF7FEBF 		b	readByte
 813              	.L130:
 814 0026 00BF     		.align	2
 815              	.L129:
 816 0028 00000000 		.word	ROM
 817 002c 00C0FFFF 		.word	VIDEO_RAM-16384
 818 0030 00A8FFFF 		.word	ATTR_RAM-22528
 820              		.section	.text.peek16,"ax",%progbits
 821              		.align	1
 822              		.global	peek16
 823              		.thumb
 824              		.thumb_func
 826              	peek16:
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829 0000 38B5     		push	{r3, r4, r5, lr}
 830 0002 0546     		mov	r5, r0
 831 0004 0130     		adds	r0, r0, #1
 832 0006 80B2     		uxth	r0, r0
 833 0008 FFF7FEFF 		bl	peek
 834 000c 0446     		mov	r4, r0
 835 000e 2846     		mov	r0, r5
 836 0010 FFF7FEFF 		bl	peek
 837 0014 40EA0420 		orr	r0, r0, r4, lsl #8
ARM GAS  /tmp/ccy0i7s0.s 			page 15


 838 0018 80B2     		uxth	r0, r0
 839 001a 38BD     		pop	{r3, r4, r5, pc}
 841              		.section	.text.writeByte,"ax",%progbits
 842              		.align	1
 843              		.global	writeByte
 844              		.thumb
 845              		.thumb_func
 847              	writeByte:
 848              		@ args = 0, pretend = 0, frame = 8
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 851 0004 1D4A     		ldr	r2, .L135
 852 0006 A0F5B64B 		sub	fp, r0, #23296
 853 000a 1368     		ldr	r3, [r2]
 854 000c 8946     		mov	r9, r1
 855 000e CBF38F1B 		ubfx	fp, fp, #6, #16
 856 0012 1B49     		ldr	r1, .L135+4
 857 0014 0133     		adds	r3, r3, #1
 858 0016 4FEA8B06 		lsl	r6, fp, #2
 859 001a 1360     		str	r3, [r2]
 860 001c 8B19     		adds	r3, r1, r6
 861 001e 5B88     		ldrh	r3, [r3, #2]
 862 0020 8246     		mov	r10, r0
 863 0022 13F4005F 		tst	r3, #8192
 864 0026 1746     		mov	r7, r2
 865 0028 8846     		mov	r8, r1
 866 002a 4FF04805 		mov	r5, #72
 867 002e 154C     		ldr	r4, .L135+8
 868 0030 04D0     		beq	.L133
 869 0032 C3F30803 		ubfx	r3, r3, #0, #9
 870 0036 05FB0344 		mla	r4, r5, r3, r4
 871 003a 11E0     		b	.L134
 872              	.L133:
 873 003c FFF7FEFF 		bl	findOldestLine
 874 0040 05FB0044 		mla	r4, r5, r0, r4
 875 0044 0190     		str	r0, [sp, #4]
 876 0046 2146     		mov	r1, r4
 877 0048 B4F84000 		ldrh	r0, [r4, #64]
 878 004c FFF7FEFF 		bl	writeCache64bIfmodified
 879 0050 019A     		ldr	r2, [sp, #4]
 880 0052 5846     		mov	r0, fp
 881 0054 2146     		mov	r1, r4
 882 0056 92B2     		uxth	r2, r2
 883 0058 FFF7FEFF 		bl	readCache64b
 884 005c A4F840B0 		strh	fp, [r4, #64]	@ movhi
 885              	.L134:
 886 0060 3B68     		ldr	r3, [r7]
 887 0062 4644     		add	r6, r6, r8
 888 0064 6364     		str	r3, [r4, #68]
 889 0066 7388     		ldrh	r3, [r6, #2]
 890 0068 0AF03F00 		and	r0, r10, #63
 891 006c 43F48043 		orr	r3, r3, #16384
 892 0070 04F80090 		strb	r9, [r4, r0]
 893 0074 7380     		strh	r3, [r6, #2]	@ movhi
 894 0076 03B0     		add	sp, sp, #12
 895              		@ sp needed
 896 0078 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /tmp/ccy0i7s0.s 			page 16


 897              	.L136:
 898              		.align	2
 899              	.L135:
 900 007c 00000000 		.word	.LANCHOR7
 901 0080 00000000 		.word	Blocks
 902 0084 00000000 		.word	Lines
 904              		.section	.text.poke,"ax",%progbits
 905              		.align	1
 906              		.global	poke
 907              		.thumb
 908              		.thumb_func
 910              	poke:
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913 0000 B0F5804F 		cmp	r0, #16384
 914 0004 30B5     		push	{r4, r5, lr}
 915 0006 0346     		mov	r3, r0
 916 0008 0C46     		mov	r4, r1
 917 000a 29D3     		bcc	.L137
 918 000c B0F5B04F 		cmp	r0, #22528
 919 0010 10D2     		bcs	.L139
 920 0012 00F4C051 		and	r1, r0, #6144
 921 0016 C2B2     		uxtb	r2, r0
 922 0018 42EAD102 		orr	r2, r2, r1, lsr #3
 923 001c 114D     		ldr	r5, .L142
 924 001e D008     		lsrs	r0, r2, #3
 925 0020 0121     		movs	r1, #1
 926 0022 02F00302 		and	r2, r2, #3
 927 0026 01FA02F2 		lsl	r2, r1, r2
 928 002a 295C     		ldrb	r1, [r5, r0]	@ zero_extendqisi2
 929 002c 0A43     		orrs	r2, r2, r1
 930 002e 2A54     		strb	r2, [r5, r0]
 931 0030 0D4A     		ldr	r2, .L142+4
 932 0032 0FE0     		b	.L141
 933              	.L139:
 934 0034 B0F5B64F 		cmp	r0, #23296
 935 0038 0ED2     		bcs	.L140
 936 003a A0F5B043 		sub	r3, r0, #22528
 937 003e 9BB2     		uxth	r3, r3
 938 0040 084D     		ldr	r5, .L142
 939 0042 D808     		lsrs	r0, r3, #3
 940 0044 03F00301 		and	r1, r3, #3
 941 0048 0122     		movs	r2, #1
 942 004a 8A40     		lsls	r2, r2, r1
 943 004c 295C     		ldrb	r1, [r5, r0]	@ zero_extendqisi2
 944 004e 0A43     		orrs	r2, r2, r1
 945 0050 2A54     		strb	r2, [r5, r0]
 946 0052 064A     		ldr	r2, .L142+8
 947              	.L141:
 948 0054 D454     		strb	r4, [r2, r3]
 949 0056 30BD     		pop	{r4, r5, pc}
 950              	.L140:
 951 0058 BDE83040 		pop	{r4, r5, lr}
 952 005c FFF7FEBF 		b	writeByte
 953              	.L137:
 954 0060 30BD     		pop	{r4, r5, pc}
 955              	.L143:
ARM GAS  /tmp/ccy0i7s0.s 			page 17


 956 0062 00BF     		.align	2
 957              	.L142:
 958 0064 00000000 		.word	ATTR_RAM_MOD
 959 0068 00C0FFFF 		.word	VIDEO_RAM-16384
 960 006c 00000000 		.word	ATTR_RAM
 962              		.section	.text.poke16,"ax",%progbits
 963              		.align	1
 964              		.global	poke16
 965              		.thumb
 966              		.thumb_func
 968              	poke16:
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971 0000 38B5     		push	{r3, r4, r5, lr}
 972 0002 0446     		mov	r4, r0
 973 0004 0D46     		mov	r5, r1
 974 0006 C9B2     		uxtb	r1, r1
 975 0008 FFF7FEFF 		bl	poke
 976 000c 601C     		adds	r0, r4, #1
 977 000e 290A     		lsrs	r1, r5, #8
 978 0010 80B2     		uxth	r0, r0
 979 0012 BDE83840 		pop	{r3, r4, r5, lr}
 980 0016 FFF7FEBF 		b	poke
 982              		.section	.text.wait_any_key,"ax",%progbits
 983              		.align	1
 984              		.global	wait_any_key
 985              		.thumb
 986              		.thumb_func
 988              	wait_any_key:
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991 0000 08B5     		push	{r3, lr}
 992              	.L146:
 993 0002 FFF7FEFF 		bl	TP_Touchpad_Pressed
 994 0006 0028     		cmp	r0, #0
 995 0008 FBD0     		beq	.L146
 996 000a 08BD     		pop	{r3, pc}
 998              		.section	.text.memory_test,"ax",%progbits
 999              		.align	1
 1000              		.global	memory_test
 1001              		.thumb
 1002              		.thumb_func
 1004              	memory_test:
 1005              		@ args = 0, pretend = 0, frame = 64
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1008 0004 0024     		movs	r4, #0
 1009 0006 93B0     		sub	sp, sp, #76
 1010              	.L150:
 1011 0008 0023     		movs	r3, #0
 1012              	.L151:
 1013 000a 1A19     		adds	r2, r3, r4
 1014 000c 02AE     		add	r6, sp, #8
 1015 000e 82F05502 		eor	r2, r2, #85
 1016 0012 9A55     		strb	r2, [r3, r6]
 1017 0014 0133     		adds	r3, r3, #1
 1018 0016 402B     		cmp	r3, #64
ARM GAS  /tmp/ccy0i7s0.s 			page 18


 1019 0018 F7D1     		bne	.L151
 1020 001a 654D     		ldr	r5, .L178
 1021 001c 3246     		mov	r2, r6
 1022 001e 05EB8403 		add	r3, r5, r4, lsl #2
 1023 0022 15F82400 		ldrb	r0, [r5, r4, lsl #2]	@ zero_extendqisi2
 1024 0026 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1025 0028 8000     		lsls	r0, r0, #2
 1026 002a 8900     		lsls	r1, r1, #2
 1027 002c 0134     		adds	r4, r4, #1
 1028 002e FFF7FEFF 		bl	LCD_Write64bytes
 1029 0032 B4F5257F 		cmp	r4, #660
 1030 0036 E7D1     		bne	.L150
 1031 0038 4FF0FF38 		mov	r8, #-1
 1032 003c 4FF00109 		mov	r9, #1
 1033 0040 0027     		movs	r7, #0
 1034              	.L152:
 1035 0042 05EB8703 		add	r3, r5, r7, lsl #2
 1036 0046 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1037 0048 15F82700 		ldrb	r0, [r5, r7, lsl #2]	@ zero_extendqisi2
 1038 004c 8900     		lsls	r1, r1, #2
 1039 004e 8000     		lsls	r0, r0, #2
 1040 0050 0023     		movs	r3, #0
 1041              	.L153:
 1042 0052 0024     		movs	r4, #0
 1043 0054 F454     		strb	r4, [r6, r3]
 1044 0056 0133     		adds	r3, r3, #1
 1045 0058 402B     		cmp	r3, #64
 1046 005a FAD1     		bne	.L153
 1047 005c 3246     		mov	r2, r6
 1048 005e FFF7FEFF 		bl	LCD_Read64bytes
 1049 0062 2346     		mov	r3, r4
 1050              	.L155:
 1051 0064 DA19     		adds	r2, r3, r7
 1052 0066 F15C     		ldrb	r1, [r6, r3]	@ zero_extendqisi2
 1053 0068 82F05502 		eor	r2, r2, #85
 1054 006c D2B2     		uxtb	r2, r2
 1055 006e 9142     		cmp	r1, r2
 1056 0070 03F10103 		add	r3, r3, #1
 1057 0074 1CBF     		itt	ne
 1058 0076 B846     		movne	r8, r7
 1059 0078 4FF00009 		movne	r9, #0
 1060 007c 402B     		cmp	r3, #64
 1061 007e F1D1     		bne	.L155
 1062 0080 0137     		adds	r7, r7, #1
 1063 0082 B7F5257F 		cmp	r7, #660
 1064 0086 DCD1     		bne	.L152
 1065 0088 4A4B     		ldr	r3, .L178+4
 1066 008a 4B48     		ldr	r0, .L178+8
 1067 008c 0024     		movs	r4, #0
 1068 008e 0127     		movs	r7, #1
 1069 0090 A145     		cmp	r9, r4
 1070 0092 08BF     		it	eq
 1071 0094 1846     		moveq	r0, r3
 1072 0096 5021     		movs	r1, #80
 1073 0098 8222     		movs	r2, #130
 1074 009a 4FF4FC63 		mov	r3, #2016
 1075 009e 0097     		str	r7, [sp]
ARM GAS  /tmp/ccy0i7s0.s 			page 19


 1076 00a0 0194     		str	r4, [sp, #4]
 1077 00a2 FFF7FEFF 		bl	LCD_Draw_Text
 1078 00a6 4046     		mov	r0, r8
 1079 00a8 FFF7FEFF 		bl	printNum16
 1080 00ac 5021     		movs	r1, #80
 1081 00ae 8C22     		movs	r2, #140
 1082 00b0 4FF4FC63 		mov	r3, #2016
 1083 00b4 0097     		str	r7, [sp]
 1084 00b6 0194     		str	r4, [sp, #4]
 1085 00b8 FFF7FEFF 		bl	LCD_Draw_Text
 1086 00bc 4FF47A70 		mov	r0, #1000
 1087 00c0 FFF7FEFF 		bl	HAL_Delay
 1088 00c4 FFF7FEFF 		bl	wait_any_key
 1089              	.L157:
 1090 00c8 0023     		movs	r3, #0
 1091              	.L158:
 1092 00ca 0022     		movs	r2, #0
 1093 00cc F254     		strb	r2, [r6, r3]
 1094 00ce 0133     		adds	r3, r3, #1
 1095 00d0 402B     		cmp	r3, #64
 1096 00d2 FAD1     		bne	.L158
 1097 00d4 2B19     		adds	r3, r5, r4
 1098 00d6 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1099 00d8 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1100 00da 8000     		lsls	r0, r0, #2
 1101 00dc 8900     		lsls	r1, r1, #2
 1102 00de 3246     		mov	r2, r6
 1103 00e0 0434     		adds	r4, r4, #4
 1104 00e2 FFF7FEFF 		bl	LCD_Write64bytes
 1105 00e6 B4F5256F 		cmp	r4, #2640
 1106 00ea EDD1     		bne	.L157
 1107 00ec 4FF48044 		mov	r4, #16384
 1108              	.L160:
 1109 00f0 C4F3C701 		ubfx	r1, r4, #3, #8
 1110 00f4 A0B2     		uxth	r0, r4
 1111 00f6 81F05501 		eor	r1, r1, #85
 1112 00fa 0134     		adds	r4, r4, #1
 1113 00fc FFF7FEFF 		bl	poke
 1114 0100 B4F5803F 		cmp	r4, #65536
 1115 0104 F4D1     		bne	.L160
 1116 0106 4FF48044 		mov	r4, #16384
 1117              	.L161:
 1118 010a 04F16401 		add	r1, r4, #100
 1119 010e C1F3C701 		ubfx	r1, r1, #3, #8
 1120 0112 A0B2     		uxth	r0, r4
 1121 0114 81F05501 		eor	r1, r1, #85
 1122 0118 0134     		adds	r4, r4, #1
 1123 011a FFF7FEFF 		bl	poke
 1124 011e B4F5803F 		cmp	r4, #65536
 1125 0122 F2D1     		bne	.L161
 1126 0124 4FF0FF35 		mov	r5, #-1
 1127 0128 0126     		movs	r6, #1
 1128 012a 4FF48044 		mov	r4, #16384
 1129              	.L163:
 1130 012e A0B2     		uxth	r0, r4
 1131 0130 FFF7FEFF 		bl	peek
 1132 0134 04F16403 		add	r3, r4, #100
ARM GAS  /tmp/ccy0i7s0.s 			page 20


 1133 0138 C3F3C703 		ubfx	r3, r3, #3, #8
 1134 013c 83F05503 		eor	r3, r3, #85
 1135 0140 8342     		cmp	r3, r0
 1136 0142 03D0     		beq	.L162
 1137 0144 6B1C     		adds	r3, r5, #1
 1138 0146 04BF     		itt	eq
 1139 0148 2546     		moveq	r5, r4
 1140 014a 0026     		moveq	r6, #0
 1141              	.L162:
 1142 014c 0134     		adds	r4, r4, #1
 1143 014e B4F5803F 		cmp	r4, #65536
 1144 0152 ECD1     		bne	.L163
 1145 0154 4FF48044 		mov	r4, #16384
 1146              	.L164:
 1147 0158 A0B2     		uxth	r0, r4
 1148 015a 0021     		movs	r1, #0
 1149 015c 0134     		adds	r4, r4, #1
 1150 015e FFF7FEFF 		bl	poke
 1151 0162 B4F5803F 		cmp	r4, #65536
 1152 0166 F7D1     		bne	.L164
 1153 0168 124B     		ldr	r3, .L178+4
 1154 016a 1348     		ldr	r0, .L178+8
 1155 016c 0024     		movs	r4, #0
 1156 016e 0127     		movs	r7, #1
 1157 0170 A642     		cmp	r6, r4
 1158 0172 08BF     		it	eq
 1159 0174 1846     		moveq	r0, r3
 1160 0176 5021     		movs	r1, #80
 1161 0178 A022     		movs	r2, #160
 1162 017a 4FF4FC63 		mov	r3, #2016
 1163 017e 0097     		str	r7, [sp]
 1164 0180 0194     		str	r4, [sp, #4]
 1165 0182 FFF7FEFF 		bl	LCD_Draw_Text
 1166 0186 2846     		mov	r0, r5
 1167 0188 FFF7FEFF 		bl	printNum16
 1168 018c 5021     		movs	r1, #80
 1169 018e AA22     		movs	r2, #170
 1170 0190 4FF4FC63 		mov	r3, #2016
 1171 0194 0097     		str	r7, [sp]
 1172 0196 0194     		str	r4, [sp, #4]
 1173 0198 FFF7FEFF 		bl	LCD_Draw_Text
 1174 019c 4FF47A70 		mov	r0, #1000
 1175 01a0 FFF7FEFF 		bl	HAL_Delay
 1176 01a4 FFF7FEFF 		bl	wait_any_key
 1177 01a8 13B0     		add	sp, sp, #76
 1178              		@ sp needed
 1179 01aa BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1180              	.L179:
 1181 01ae 00BF     		.align	2
 1182              	.L178:
 1183 01b0 00000000 		.word	Blocks
 1184 01b4 03000000 		.word	.LC1
 1185 01b8 00000000 		.word	.LC0
 1187              		.section	.text.readCard,"ax",%progbits
 1188              		.align	1
 1189              		.global	readCard
 1190              		.thumb
ARM GAS  /tmp/ccy0i7s0.s 			page 21


 1191              		.thumb_func
 1193              	readCard:
 1194              		@ args = 0, pretend = 0, frame = 240
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 1196 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1197 0004 9948     		ldr	r0, .L218
 1198 0006 BFB0     		sub	sp, sp, #252
 1199 0008 9949     		ldr	r1, .L218+4
 1200 000a FFF7FEFF 		bl	FATFS_LinkDriver
 1201 000e 0028     		cmp	r0, #0
 1202 0010 40F02881 		bne	.L215
 1203 0014 FFF7FEFF 		bl	BSP_SD_Init
 1204 0018 0246     		mov	r2, r0
 1205 001a 0028     		cmp	r0, #0
 1206 001c 40F02281 		bne	.L215
 1207 0020 9448     		ldr	r0, .L218+8
 1208 0022 9349     		ldr	r1, .L218+4
 1209 0024 FFF7FEFF 		bl	f_mount
 1210 0028 0546     		mov	r5, r0
 1211 002a 0028     		cmp	r0, #0
 1212 002c 40F01A81 		bne	.L215
 1213 0030 FFF7FEFF 		bl	clearFullScreen
 1214 0034 AA46     		mov	r10, r5
 1215 0036 2E46     		mov	r6, r5
 1216              	.L184:
 1217 0038 0CA8     		add	r0, sp, #48
 1218 003a 8D49     		ldr	r1, .L218+4
 1219 003c FFF7FEFF 		bl	f_opendir
 1220 0040 0028     		cmp	r0, #0
 1221 0042 40F0C780 		bne	.L202
 1222 0046 0446     		mov	r4, r0
 1223              	.L190:
 1224 0048 0CA8     		add	r0, sp, #48
 1225 004a 06A9     		add	r1, sp, #24
 1226 004c FFF7FEFF 		bl	f_readdir
 1227 0050 0028     		cmp	r0, #0
 1228 0052 40F0BB80 		bne	.L191
 1229 0056 9DF82130 		ldrb	r3, [sp, #33]	@ zero_extendqisi2
 1230 005a 002B     		cmp	r3, #0
 1231 005c 00F0B680 		beq	.L191
 1232 0060 0DF12100 		add	r0, sp, #33
 1233 0064 8449     		ldr	r1, .L218+12
 1234 0066 0222     		movs	r2, #2
 1235 0068 0135     		adds	r5, r5, #1
 1236 006a FFF7FEFF 		bl	strncasecmp
 1237 006e 0028     		cmp	r0, #0
 1238 0070 EAD1     		bne	.L190
 1239 0072 14A8     		add	r0, sp, #80
 1240 0074 0DF12101 		add	r1, sp, #33
 1241 0078 0122     		movs	r2, #1
 1242 007a FFF7FEFF 		bl	f_open
 1243 007e 0028     		cmp	r0, #0
 1244 0080 E2D1     		bne	.L190
 1245 0082 BAF1000F 		cmp	r10, #0
 1246 0086 34D1     		bne	.L193
 1247 0088 4FF0050B 		mov	fp, #5
 1248 008c 94FBFBF3 		sdiv	r3, r4, fp
ARM GAS  /tmp/ccy0i7s0.s 			page 22


 1249 0090 03EB8308 		add	r8, r3, r3, lsl #2
 1250 0094 C8EB0408 		rsb	r8, r8, r4
 1251 0098 08FA0BF2 		lsl	r2, r8, fp
 1252 009c D046     		mov	r8, r10
 1253 009e 4FF0180B 		mov	fp, #24
 1254 00a2 0BFB03FB 		mul	fp, fp, r3
 1255 00a6 0392     		str	r2, [sp, #12]
 1256              	.L195:
 1257 00a8 14A8     		add	r0, sp, #80
 1258 00aa 1EA9     		add	r1, sp, #120
 1259 00ac 6022     		movs	r2, #96
 1260 00ae 05AB     		add	r3, sp, #20
 1261 00b0 FFF7FEFF 		bl	f_read
 1262 00b4 08EB0B09 		add	r9, r8, fp
 1263 00b8 4FEA4909 		lsl	r9, r9, #1
 1264 00bc 1FFA89F9 		uxth	r9, r9
 1265 00c0 0027     		movs	r7, #0
 1266              	.L194:
 1267 00c2 07EB4702 		add	r2, r7, r7, lsl #1
 1268 00c6 1EAB     		add	r3, sp, #120
 1269 00c8 1A44     		add	r2, r2, r3
 1270 00ca 039B     		ldr	r3, [sp, #12]
 1271 00cc 4946     		mov	r1, r9
 1272 00ce F818     		adds	r0, r7, r3
 1273 00d0 4000     		lsls	r0, r0, #1
 1274 00d2 0223     		movs	r3, #2
 1275 00d4 0093     		str	r3, [sp]
 1276 00d6 0193     		str	r3, [sp, #4]
 1277 00d8 80B2     		uxth	r0, r0
 1278 00da 1346     		mov	r3, r2
 1279 00dc 0137     		adds	r7, r7, #1
 1280 00de FFF7FEFF 		bl	LCD_FullRect6
 1281 00e2 202F     		cmp	r7, #32
 1282 00e4 EDD1     		bne	.L194
 1283 00e6 08F10108 		add	r8, r8, #1
 1284 00ea B8F1180F 		cmp	r8, #24
 1285 00ee DBD1     		bne	.L195
 1286 00f0 67E0     		b	.L197
 1287              	.L193:
 1288 00f2 B442     		cmp	r4, r6
 1289 00f4 65DB     		blt	.L197
 1290 00f6 FFF7FEFF 		bl	clearFullScreen
 1291 00fa 1824     		movs	r4, #24
 1292              	.L198:
 1293 00fc 1EAE     		add	r6, sp, #120
 1294 00fe 14A8     		add	r0, sp, #80
 1295 0100 3146     		mov	r1, r6
 1296 0102 6022     		movs	r2, #96
 1297 0104 05AB     		add	r3, sp, #20
 1298 0106 FFF7FEFF 		bl	f_read
 1299 010a 013C     		subs	r4, r4, #1
 1300 010c F6D1     		bne	.L198
 1301 010e 5B49     		ldr	r1, .L218+16
 1302 0110 1622     		movs	r2, #22
 1303 0112 05AB     		add	r3, sp, #20
 1304 0114 14A8     		add	r0, sp, #80
 1305 0116 FFF7FEFF 		bl	f_read
ARM GAS  /tmp/ccy0i7s0.s 			page 23


 1306 011a 5949     		ldr	r1, .L218+20
 1307 011c 0822     		movs	r2, #8
 1308 011e 05AB     		add	r3, sp, #20
 1309 0120 14A8     		add	r0, sp, #80
 1310 0122 FFF7FEFF 		bl	f_read
 1311 0126 0DF11301 		add	r1, sp, #19
 1312 012a 0122     		movs	r2, #1
 1313 012c 05AB     		add	r3, sp, #20
 1314 012e 14A8     		add	r0, sp, #80
 1315 0130 FFF7FEFF 		bl	f_read
 1316 0134 534C     		ldr	r4, .L218+24
 1317 0136 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2
 1318 013a 0DF11301 		add	r1, sp, #19
 1319 013e 2360     		str	r3, [r4]
 1320 0140 0122     		movs	r2, #1
 1321 0142 05AB     		add	r3, sp, #20
 1322 0144 14A8     		add	r0, sp, #80
 1323 0146 FFF7FEFF 		bl	f_read
 1324 014a 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2
 1325 014e 0DF11301 		add	r1, sp, #19
 1326 0152 6360     		str	r3, [r4, #4]
 1327 0154 0122     		movs	r2, #1
 1328 0156 05AB     		add	r3, sp, #20
 1329 0158 14A8     		add	r0, sp, #80
 1330 015a FFF7FEFF 		bl	f_read
 1331 015e 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2
 1332 0162 14A8     		add	r0, sp, #80
 1333 0164 A360     		str	r3, [r4, #8]
 1334 0166 0DF11301 		add	r1, sp, #19
 1335 016a 05AB     		add	r3, sp, #20
 1336 016c 0122     		movs	r2, #1
 1337 016e FFF7FEFF 		bl	f_read
 1338 0172 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2
 1339 0176 4FF48045 		mov	r5, #16384
 1340 017a E360     		str	r3, [r4, #12]
 1341              	.L200:
 1342 017c 14A8     		add	r0, sp, #80
 1343 017e 3146     		mov	r1, r6
 1344 0180 8022     		movs	r2, #128
 1345 0182 05AB     		add	r3, sp, #20
 1346 0184 FFF7FEFF 		bl	f_read
 1347 0188 0024     		movs	r4, #0
 1348              	.L199:
 1349 018a 6019     		adds	r0, r4, r5
 1350 018c 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 1351 018e 80B2     		uxth	r0, r0
 1352 0190 0134     		adds	r4, r4, #1
 1353 0192 FFF7FEFF 		bl	poke
 1354 0196 802C     		cmp	r4, #128
 1355 0198 F7D1     		bne	.L199
 1356 019a 8035     		adds	r5, r5, #128
 1357 019c B5F5803F 		cmp	r5, #65536
 1358 01a0 ECD1     		bne	.L200
 1359 01a2 14A8     		add	r0, sp, #80
 1360 01a4 FFF7FEFF 		bl	f_close
 1361 01a8 0CA8     		add	r0, sp, #48
 1362 01aa FFF7FEFF 		bl	f_closedir
ARM GAS  /tmp/ccy0i7s0.s 			page 24


 1363 01ae 0020     		movs	r0, #0
 1364 01b0 2F49     		ldr	r1, .L218+4
 1365 01b2 0246     		mov	r2, r0
 1366 01b4 FFF7FEFF 		bl	f_mount
 1367 01b8 2D48     		ldr	r0, .L218+4
 1368 01ba FFF7FEFF 		bl	FATFS_UnLinkDriver
 1369 01be 0120     		movs	r0, #1
 1370 01c0 51E0     		b	.L182
 1371              	.L197:
 1372 01c2 14A8     		add	r0, sp, #80
 1373 01c4 0134     		adds	r4, r4, #1
 1374 01c6 FFF7FEFF 		bl	f_close
 1375 01ca 3DE7     		b	.L190
 1376              	.L191:
 1377 01cc 0CA8     		add	r0, sp, #48
 1378 01ce FFF7FEFF 		bl	f_closedir
 1379 01d2 00E0     		b	.L189
 1380              	.L202:
 1381 01d4 0024     		movs	r4, #0
 1382              	.L189:
 1383 01d6 BAF1010F 		cmp	r10, #1
 1384 01da 3BD0     		beq	.L216
 1385 01dc 4FF0FF33 		mov	r3, #-1
 1386 01e0 1E93     		str	r3, [sp, #120]
 1387 01e2 2046     		mov	r0, r4
 1388 01e4 002C     		cmp	r4, #0
 1389 01e6 3ED0     		beq	.L182
 1390 01e8 0126     		movs	r6, #1
 1391 01ea 0024     		movs	r4, #0
 1392 01ec FFF7FEFF 		bl	printNum
 1393 01f0 2821     		movs	r1, #40
 1394 01f2 3222     		movs	r2, #50
 1395 01f4 4FF4FC63 		mov	r3, #2016
 1396 01f8 0096     		str	r6, [sp]
 1397 01fa 0194     		str	r4, [sp, #4]
 1398 01fc FFF7FEFF 		bl	LCD_Draw_Text
 1399 0200 2846     		mov	r0, r5
 1400 0202 FFF7FEFF 		bl	printNum
 1401 0206 0096     		str	r6, [sp]
 1402 0208 0194     		str	r4, [sp, #4]
 1403 020a 2821     		movs	r1, #40
 1404 020c 3C22     		movs	r2, #60
 1405 020e 4FF4FC63 		mov	r3, #2016
 1406 0212 FFF7FEFF 		bl	LCD_Draw_Text
 1407              	.L187:
 1408 0216 1E98     		ldr	r0, [sp, #120]
 1409 0218 431C     		adds	r3, r0, #1
 1410 021a 07D1     		bne	.L217
 1411              	.L188:
 1412 021c FFF7FEFF 		bl	TP_Touchpad_Pressed
 1413 0220 0028     		cmp	r0, #0
 1414 0222 FBD0     		beq	.L188
 1415 0224 1EA8     		add	r0, sp, #120
 1416 0226 FFF7FEFF 		bl	TP_Read_Coordinates
 1417 022a F4E7     		b	.L187
 1418              	.L217:
 1419 022c 0822     		movs	r2, #8
ARM GAS  /tmp/ccy0i7s0.s 			page 25


 1420 022e 4FF6E073 		movw	r3, #65504
 1421 0232 1F99     		ldr	r1, [sp, #124]
 1422 0234 FFF7FEFF 		bl	paintCross
 1423 0238 1F9B     		ldr	r3, [sp, #124]
 1424 023a 3026     		movs	r6, #48
 1425 023c 93FBF6F6 		sdiv	r6, r3, r6
 1426 0240 1E9B     		ldr	r3, [sp, #120]
 1427 0242 4022     		movs	r2, #64
 1428 0244 93FBF2F3 		sdiv	r3, r3, r2
 1429 0248 06EB8606 		add	r6, r6, r6, lsl #2
 1430 024c 1E44     		add	r6, r6, r3
 1431 024e 4FF0010A 		mov	r10, #1
 1432 0252 F1E6     		b	.L184
 1433              	.L216:
 1434 0254 0020     		movs	r0, #0
 1435 0256 0649     		ldr	r1, .L218+4
 1436 0258 0246     		mov	r2, r0
 1437 025a FFF7FEFF 		bl	f_mount
 1438 025e 0448     		ldr	r0, .L218+4
 1439 0260 FFF7FEFF 		bl	FATFS_UnLinkDriver
 1440              	.L215:
 1441 0264 0020     		movs	r0, #0
 1442              	.L182:
 1443 0266 3FB0     		add	sp, sp, #252
 1444              		@ sp needed
 1445 0268 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1446              	.L219:
 1447              		.align	2
 1448              	.L218:
 1449 026c 00000000 		.word	SD_Driver
 1450 0270 00000000 		.word	SD_Path
 1451 0274 00000000 		.word	SD_FatFs
 1452 0278 10000000 		.word	.LC2
 1453 027c 00000000 		.word	reg
 1454 0280 00000000 		.word	reg_
 1455 0284 00000000 		.word	IFlags
 1457              		.section	.text.minit,"ax",%progbits
 1458              		.align	1
 1459              		.global	minit
 1460              		.thumb
 1461              		.thumb_func
 1463              	minit:
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466 0000 13B5     		push	{r0, r1, r4, lr}
 1467 0002 FFF7FEFF 		bl	LCD_init
 1468 0006 2820     		movs	r0, #40
 1469 0008 FFF7FEFF 		bl	LCD_setOrientation
 1470 000c FFF7FEFF 		bl	LCD_getWidth
 1471 0010 0446     		mov	r4, r0
 1472 0012 FFF7FEFF 		bl	LCD_getHeight
 1473 0016 0346     		mov	r3, r0
 1474 0018 0020     		movs	r0, #0
 1475 001a 0146     		mov	r1, r0
 1476 001c 0090     		str	r0, [sp]
 1477 001e 2246     		mov	r2, r4
 1478 0020 FFF7FEFF 		bl	LCD_fillRect
ARM GAS  /tmp/ccy0i7s0.s 			page 26


 1479 0024 FFF7FEFF 		bl	TP_init_default
 1480 0028 FFF7FEFF 		bl	clearFullScreen
 1481 002c FFF7FEFF 		bl	initBlocksAndLines
 1482 0030 0120     		movs	r0, #1
 1483 0032 FFF7FEFF 		bl	z80_reset
 1484 0036 FFF7FEFF 		bl	readCard
 1485 003a 20B9     		cbnz	r0, .L221
 1486 003c FFF7FEFF 		bl	clearFullScreen
 1487 0040 0120     		movs	r0, #1
 1488 0042 FFF7FEFF 		bl	z80_reset
 1489              	.L221:
 1490 0046 02B0     		add	sp, sp, #8
 1491              		@ sp needed
 1492 0048 BDE81040 		pop	{r4, lr}
 1493 004c FFF7FEBF 		b	setAttr
 1495              		.section	.text.mloop,"ax",%progbits
 1496              		.align	1
 1497              		.global	mloop
 1498              		.thumb
 1499              		.thumb_func
 1501              	mloop:
 1502              		@ args = 0, pretend = 0, frame = 216
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1505 0004 B9B0     		sub	sp, sp, #228
 1506 0006 FFF7FEFF 		bl	HAL_GetTick
 1507 000a B34D     		ldr	r5, .L287
 1508 000c 8046     		mov	r8, r0
 1509 000e 2B68     		ldr	r3, [r5]
 1510 0010 BBB9     		cbnz	r3, .L223
 1511 0012 B24B     		ldr	r3, .L287+4
 1512 0014 1B68     		ldr	r3, [r3]
 1513 0016 B3B9     		cbnz	r3, .L225
 1514              	.L224:
 1515 0018 B14A     		ldr	r2, .L287+8
 1516 001a B249     		ldr	r1, .L287+12
 1517 001c 1368     		ldr	r3, [r2]
 1518 001e 8B42     		cmp	r3, r1
 1519 0020 02DC     		bgt	.L285
 1520 0022 FFF7FEFF 		bl	z80_run
 1521 0026 F7E7     		b	.L224
 1522              	.L285:
 1523 0028 A3F58833 		sub	r3, r3, #69632
 1524 002c A3F58073 		sub	r3, r3, #256
 1525 0030 1360     		str	r3, [r2]
 1526 0032 AD4A     		ldr	r2, .L287+16
 1527 0034 1368     		ldr	r3, [r2]
 1528 0036 A3F58833 		sub	r3, r3, #69632
 1529 003a A3F58073 		sub	r3, r3, #256
 1530 003e 1360     		str	r3, [r2]
 1531 0040 01E0     		b	.L225
 1532              	.L223:
 1533 0042 FFF7FEFF 		bl	setAttr
 1534              	.L225:
 1535 0046 FFF7FEFF 		bl	HAL_GetTick
 1536 004a 0446     		mov	r4, r0
 1537              	.L227:
ARM GAS  /tmp/ccy0i7s0.s 			page 27


 1538 004c FFF7FEFF 		bl	HAL_GetTick
 1539 0050 C8EB0000 		rsb	r0, r8, r0
 1540 0054 1328     		cmp	r0, #19
 1541 0056 03D8     		bhi	.L286
 1542 0058 0120     		movs	r0, #1
 1543 005a FFF7FEFF 		bl	HAL_Delay
 1544 005e F5E7     		b	.L227
 1545              	.L286:
 1546 0060 0023     		movs	r3, #0
 1547 0062 2B60     		str	r3, [r5]
 1548 0064 C8EB0408 		rsb	r8, r8, r4
 1549 0068 FFF7FEFF 		bl	TP_Touchpad_Pressed
 1550 006c 50B1     		cbz	r0, .L230
 1551 006e 9A4B     		ldr	r3, .L287
 1552 0070 0125     		movs	r5, #1
 1553 0072 1D60     		str	r5, [r3]
 1554 0074 FFF7FEFF 		bl	readCard
 1555 0078 20B9     		cbnz	r0, .L230
 1556 007a FFF7FEFF 		bl	clearFullScreen
 1557 007e 2846     		mov	r0, r5
 1558 0080 FFF7FEFF 		bl	z80_reset
 1559              	.L230:
 1560 0084 FFF7FEFF 		bl	HAL_GetTick
 1561 0088 984D     		ldr	r5, .L287+20
 1562 008a 2B68     		ldr	r3, [r5]
 1563 008c C01A     		subs	r0, r0, r3
 1564 008e 2728     		cmp	r0, #39
 1565 0090 40F2FA80 		bls	.L232
 1566 0094 FFF7FEFF 		bl	HAL_GetTick
 1567 0098 2860     		str	r0, [r5]
 1568 009a 9548     		ldr	r0, .L287+24
 1569 009c FFF7FEFF 		bl	HAL_SPI_DeInit
 1570 00a0 0120     		movs	r0, #1
 1571 00a2 FFF7FEFF 		bl	MX_SPI1_Init
 1572 00a6 934B     		ldr	r3, .L287+28
 1573 00a8 1A68     		ldr	r2, [r3]
 1574 00aa 22F04002 		bic	r2, r2, #64
 1575 00ae 1A60     		str	r2, [r3]
 1576 00b0 1A68     		ldr	r2, [r3]
 1577 00b2 42F04002 		orr	r2, r2, #64
 1578 00b6 1A60     		str	r2, [r3]
 1579 00b8 8F4B     		ldr	r3, .L287+32
 1580 00ba 904A     		ldr	r2, .L287+36
 1581 00bc 1B88     		ldrh	r3, [r3]
 1582 00be 1088     		ldrh	r0, [r2]
 1583 00c0 03F00701 		and	r1, r3, #7
 1584 00c4 8842     		cmp	r0, r1
 1585 00c6 36D0     		beq	.L233
 1586 00c8 13F0020F 		tst	r3, #2
 1587 00cc 1180     		strh	r1, [r2]	@ movhi
 1588 00ce 14BF     		ite	ne
 1589 00d0 D722     		movne	r2, #215
 1590 00d2 0022     		moveq	r2, #0
 1591 00d4 13F0040F 		tst	r3, #4
 1592 00d8 8DF82020 		strb	r2, [sp, #32]
 1593 00dc 14BF     		ite	ne
 1594 00de D722     		movne	r2, #215
ARM GAS  /tmp/ccy0i7s0.s 			page 28


 1595 00e0 0022     		moveq	r2, #0
 1596 00e2 13F0010F 		tst	r3, #1
 1597 00e6 14BF     		ite	ne
 1598 00e8 D723     		movne	r3, #215
 1599 00ea 0023     		moveq	r3, #0
 1600 00ec C825     		movs	r5, #200
 1601 00ee 8DF82120 		strb	r2, [sp, #33]
 1602 00f2 8DF82230 		strb	r3, [sp, #34]
 1603 00f6 0095     		str	r5, [sp]
 1604 00f8 1C20     		movs	r0, #28
 1605 00fa 1421     		movs	r1, #20
 1606 00fc 08AA     		add	r2, sp, #32
 1607 00fe 0423     		movs	r3, #4
 1608 0100 FFF7FEFF 		bl	LCD_FullRect3
 1609 0104 0095     		str	r5, [sp]
 1610 0106 4FF49070 		mov	r0, #288
 1611 010a 1421     		movs	r1, #20
 1612 010c 08AA     		add	r2, sp, #32
 1613 010e 0423     		movs	r3, #4
 1614 0110 0425     		movs	r5, #4
 1615 0112 FFF7FEFF 		bl	LCD_FullRect3
 1616 0116 1C20     		movs	r0, #28
 1617 0118 1421     		movs	r1, #20
 1618 011a 08AA     		add	r2, sp, #32
 1619 011c 4FF48473 		mov	r3, #264
 1620 0120 0095     		str	r5, [sp]
 1621 0122 FFF7FEFF 		bl	LCD_FullRect3
 1622 0126 0095     		str	r5, [sp]
 1623 0128 1C20     		movs	r0, #28
 1624 012a D821     		movs	r1, #216
 1625 012c 08AA     		add	r2, sp, #32
 1626 012e 4FF48473 		mov	r3, #264
 1627 0132 FFF7FEFF 		bl	LCD_FullRect3
 1628              	.L233:
 1629 0136 4FF47A73 		mov	r3, #1000
 1630 013a B4FBF3F4 		udiv	r4, r4, r3
 1631 013e 04F00103 		and	r3, r4, #1
 1632 0142 0393     		str	r3, [sp, #12]
 1633 0144 0025     		movs	r5, #0
 1634              	.L237:
 1635 0146 05F11803 		add	r3, r5, #24
 1636 014a 9BB2     		uxth	r3, r3
 1637 014c 0793     		str	r3, [sp, #28]
 1638 014e 6C4B     		ldr	r3, .L287+40
 1639 0150 4FEA8509 		lsl	r9, r5, #2
 1640 0154 4B44     		add	r3, r9, r3
 1641 0156 0693     		str	r3, [sp, #24]
 1642 0158 0024     		movs	r4, #0
 1643              	.L246:
 1644 015a 04EB0903 		add	r3, r4, r9
 1645 015e 6949     		ldr	r1, .L287+44
 1646 0160 DA10     		asrs	r2, r3, #3
 1647 0162 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1648 0164 03F00303 		and	r3, r3, #3
 1649 0168 42FA03F3 		asr	r3, r2, r3
 1650 016c DF07     		lsls	r7, r3, #31
 1651 016e 6BD5     		bpl	.L238
ARM GAS  /tmp/ccy0i7s0.s 			page 29


 1652 0170 069B     		ldr	r3, [sp, #24]
 1653 0172 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 1654 0174 C2F38013 		ubfx	r3, r2, #6, #1
 1655 0178 002B     		cmp	r3, #0
 1656 017a 14BF     		ite	ne
 1657 017c FF21     		movne	r1, #255
 1658 017e D721     		moveq	r1, #215
 1659 0180 1606     		lsls	r6, r2, #24
 1660 0182 05D5     		bpl	.L240
 1661 0184 0398     		ldr	r0, [sp, #12]
 1662 0186 18B1     		cbz	r0, .L240
 1663 0188 002B     		cmp	r3, #0
 1664 018a 14BF     		ite	ne
 1665 018c D721     		movne	r1, #215
 1666 018e FF21     		moveq	r1, #255
 1667              	.L240:
 1668 0190 C2F34003 		ubfx	r3, r2, #1, #1
 1669 0194 4B43     		muls	r3, r1, r3
 1670 0196 DBB2     		uxtb	r3, r3
 1671 0198 0493     		str	r3, [sp, #16]
 1672 019a C2F3C003 		ubfx	r3, r2, #3, #1
 1673 019e 4B43     		muls	r3, r1, r3
 1674 01a0 C2F38006 		ubfx	r6, r2, #2, #1
 1675 01a4 02F00107 		and	r7, r2, #1
 1676 01a8 C2F30010 		ubfx	r0, r2, #4, #1
 1677 01ac C2F3401E 		ubfx	lr, r2, #5, #1
 1678 01b0 4E43     		muls	r6, r1, r6
 1679 01b2 4F43     		muls	r7, r1, r7
 1680 01b4 4843     		muls	r0, r1, r0
 1681 01b6 0EFB01FE 		mul	lr, lr, r1
 1682 01ba DBB2     		uxtb	r3, r3
 1683 01bc F6B2     		uxtb	r6, r6
 1684 01be FFB2     		uxtb	r7, r7
 1685 01c0 C0B2     		uxtb	r0, r0
 1686 01c2 5FFA8EFE 		uxtb	lr, lr
 1687 01c6 0593     		str	r3, [sp, #20]
 1688 01c8 0021     		movs	r1, #0
 1689              	.L245:
 1690 01ca 4A19     		adds	r2, r1, r5
 1691 01cc 4FEA820A 		lsl	r10, r2, #2
 1692 01d0 4FEA022C 		lsl	ip, r2, #8
 1693 01d4 0AF0E00A 		and	r10, r10, #224
 1694 01d8 0CF4E06C 		and	ip, ip, #1792
 1695 01dc 5201     		lsls	r2, r2, #5
 1696 01de 02F4C052 		and	r2, r2, #6144
 1697 01e2 4AEA0C0C 		orr	ip, r10, ip
 1698 01e6 4CEA020C 		orr	ip, ip, r2
 1699 01ea 474A     		ldr	r2, .L287+48
 1700 01ec 38AB     		add	r3, sp, #224
 1701 01ee 2244     		add	r2, r2, r4
 1702 01f0 12F80CB0 		ldrb	fp, [r2, ip]	@ zero_extendqisi2
 1703 01f4 1822     		movs	r2, #24
 1704 01f6 02FB0132 		mla	r2, r2, r1, r3
 1705 01fa 4FF0070C 		mov	ip, #7
 1706 01fe BE3A     		subs	r2, r2, #190
 1707              	.L244:
 1708 0200 4BFA0CFA 		asr	r10, fp, ip
ARM GAS  /tmp/ccy0i7s0.s 			page 30


 1709 0204 0AF0010A 		and	r10, r10, #1
 1710 0208 049B     		ldr	r3, [sp, #16]
 1711 020a BAF1000F 		cmp	r10, #0
 1712 020e 14BF     		ite	ne
 1713 0210 9A46     		movne	r10, r3
 1714 0212 8246     		moveq	r10, r0
 1715 0214 02F802AC 		strb	r10, [r2, #-2]
 1716 0218 14BF     		ite	ne
 1717 021a B246     		movne	r10, r6
 1718 021c F246     		moveq	r10, lr
 1719 021e 059B     		ldr	r3, [sp, #20]
 1720 0220 02F801AC 		strb	r10, [r2, #-1]
 1721 0224 14BF     		ite	ne
 1722 0226 BA46     		movne	r10, r7
 1723 0228 9A46     		moveq	r10, r3
 1724 022a 1CF1FF3C 		adds	ip, ip, #-1
 1725 022e 02F803AB 		strb	r10, [r2], #3
 1726 0232 E5D2     		bcs	.L244
 1727 0234 0131     		adds	r1, r1, #1
 1728 0236 0829     		cmp	r1, #8
 1729 0238 C7D1     		bne	.L245
 1730 023a 201D     		adds	r0, r4, #4
 1731 023c C000     		lsls	r0, r0, #3
 1732 023e 80B2     		uxth	r0, r0
 1733 0240 0799     		ldr	r1, [sp, #28]
 1734 0242 08AA     		add	r2, sp, #32
 1735 0244 FFF7FEFF 		bl	LCD_Write8x8line
 1736              	.L238:
 1737 0248 0134     		adds	r4, r4, #1
 1738 024a 202C     		cmp	r4, #32
 1739 024c 85D1     		bne	.L246
 1740 024e 0835     		adds	r5, r5, #8
 1741 0250 C02D     		cmp	r5, #192
 1742 0252 7FF478AF 		bne	.L237
 1743 0256 274C     		ldr	r4, .L287+28
 1744 0258 FFF7FEFF 		bl	SPIx_Error1
 1745 025c 2368     		ldr	r3, [r4]
 1746 025e 23F04003 		bic	r3, r3, #64
 1747 0262 2360     		str	r3, [r4]
 1748 0264 2368     		ldr	r3, [r4]
 1749 0266 43F04003 		orr	r3, r3, #64
 1750 026a 2360     		str	r3, [r4]
 1751 026c FFF7FEFF 		bl	SPIx_Error1
 1752 0270 2368     		ldr	r3, [r4]
 1753 0272 23F04003 		bic	r3, r3, #64
 1754 0276 2360     		str	r3, [r4]
 1755 0278 2368     		ldr	r3, [r4]
 1756 027a 43F04003 		orr	r3, r3, #64
 1757 027e 2360     		str	r3, [r4]
 1758 0280 FFF7FEFF 		bl	clearAttr
 1759 0284 FFF7FEFF 		bl	clearKeys
 1760              	.L232:
 1761 0288 204B     		ldr	r3, .L287+52
 1762 028a 144D     		ldr	r5, .L287+4
 1763 028c 0124     		movs	r4, #1
 1764 028e 1C61     		str	r4, [r3, #16]
 1765 0290 2B68     		ldr	r3, [r5]
ARM GAS  /tmp/ccy0i7s0.s 			page 31


 1766 0292 3BB9     		cbnz	r3, .L248
 1767 0294 FFF7FEFF 		bl	keyScan
 1768 0298 4006     		lsls	r0, r0, #25
 1769 029a 74D5     		bpl	.L250
 1770 029c 2C60     		str	r4, [r5]
 1771 029e FFF7FEFF 		bl	clearKeys
 1772 02a2 70E0     		b	.L250
 1773              	.L248:
 1774 02a4 3220     		movs	r0, #50
 1775 02a6 FFF7FEFF 		bl	HAL_Delay
 1776 02aa FFF7FEFF 		bl	keyScan
 1777 02ae 10F0180F 		tst	r0, #24
 1778 02b2 174C     		ldr	r4, .L287+56
 1779 02b4 02D0     		beq	.L251
 1780 02b6 2368     		ldr	r3, [r4]
 1781 02b8 0433     		adds	r3, r3, #4
 1782 02ba 04E0     		b	.L284
 1783              	.L251:
 1784 02bc 10F00503 		ands	r3, r0, #5
 1785 02c0 28D0     		beq	.L253
 1786 02c2 2368     		ldr	r3, [r4]
 1787 02c4 0133     		adds	r3, r3, #1
 1788              	.L284:
 1789 02c6 0522     		movs	r2, #5
 1790 02c8 93FBF2F2 		sdiv	r2, r3, r2
 1791 02cc 02EB8202 		add	r2, r2, r2, lsl #2
 1792 02d0 9B1A     		subs	r3, r3, r2
 1793 02d2 2360     		str	r3, [r4]
 1794 02d4 28E0     		b	.L281
 1795              	.L288:
 1796 02d6 00BF     		.align	2
 1797              	.L287:
 1798 02d8 00000000 		.word	.LANCHOR8
 1799 02dc 00000000 		.word	.LANCHOR9
 1800 02e0 00000000 		.word	tstates
 1801 02e4 FF100100 		.word	69887
 1802 02e8 00000000 		.word	interrupts_enabled_at
 1803 02ec 00000000 		.word	.LANCHOR10
 1804 02f0 00000000 		.word	hspi1
 1805 02f4 00300140 		.word	1073819648
 1806 02f8 00000000 		.word	border
 1807 02fc 00000000 		.word	.LANCHOR11
 1808 0300 00000000 		.word	ATTR_RAM
 1809 0304 00000000 		.word	ATTR_RAM_MOD
 1810 0308 00000000 		.word	VIDEO_RAM
 1811 030c 00000000 		.word	IFlags
 1812 0310 00000000 		.word	.LANCHOR2
 1813              	.L253:
 1814 0314 10F0220F 		tst	r0, #34
 1815 0318 09D0     		beq	.L252
 1816 031a 2B60     		str	r3, [r5]
 1817 031c FFF7FEFF 		bl	setAttr
 1818 0320 4FF6FF72 		movw	r2, #65535
 1819 0324 254B     		ldr	r3, .L289
 1820 0326 1A80     		strh	r2, [r3]	@ movhi
 1821              	.L281:
 1822 0328 C820     		movs	r0, #200
ARM GAS  /tmp/ccy0i7s0.s 			page 32


 1823 032a FFF7FEFF 		bl	HAL_Delay
 1824              	.L252:
 1825 032e 2368     		ldr	r3, [r4]
 1826 0330 43B9     		cbnz	r3, .L254
 1827 0332 0221     		movs	r1, #2
 1828 0334 4FF4FC62 		mov	r2, #2016
 1829 0338 8DE80600 		stmia	sp, {r1, r2}
 1830 033c 2048     		ldr	r0, .L289+4
 1831 033e 5C21     		movs	r1, #92
 1832 0340 2422     		movs	r2, #36
 1833 0342 1EE0     		b	.L282
 1834              	.L254:
 1835 0344 012B     		cmp	r3, #1
 1836 0346 4FF4FC62 		mov	r2, #2016
 1837 034a 04D1     		bne	.L255
 1838 034c 0223     		movs	r3, #2
 1839 034e 0093     		str	r3, [sp]
 1840 0350 0192     		str	r2, [sp, #4]
 1841 0352 1C48     		ldr	r0, .L289+8
 1842 0354 12E0     		b	.L283
 1843              	.L255:
 1844 0356 022B     		cmp	r3, #2
 1845 0358 03D1     		bne	.L256
 1846 035a 0093     		str	r3, [sp]
 1847 035c 0192     		str	r2, [sp, #4]
 1848 035e 1A48     		ldr	r0, .L289+12
 1849 0360 0CE0     		b	.L283
 1850              	.L256:
 1851 0362 032B     		cmp	r3, #3
 1852 0364 04D1     		bne	.L257
 1853 0366 0223     		movs	r3, #2
 1854 0368 0093     		str	r3, [sp]
 1855 036a 0192     		str	r2, [sp, #4]
 1856 036c 1748     		ldr	r0, .L289+16
 1857 036e 05E0     		b	.L283
 1858              	.L257:
 1859 0370 042B     		cmp	r3, #4
 1860 0372 08D1     		bne	.L250
 1861 0374 0223     		movs	r3, #2
 1862 0376 1648     		ldr	r0, .L289+20
 1863 0378 0093     		str	r3, [sp]
 1864 037a 0192     		str	r2, [sp, #4]
 1865              	.L283:
 1866 037c 5C21     		movs	r1, #92
 1867 037e 2422     		movs	r2, #36
 1868 0380 0023     		movs	r3, #0
 1869              	.L282:
 1870 0382 FFF7FEFF 		bl	LCD_Draw_Text
 1871              	.L250:
 1872 0386 0125     		movs	r5, #1
 1873 0388 4FF4FC64 		mov	r4, #2016
 1874 038c 4046     		mov	r0, r8
 1875 038e FFF7FEFF 		bl	printNum
 1876 0392 1C21     		movs	r1, #28
 1877 0394 1422     		movs	r2, #20
 1878 0396 0023     		movs	r3, #0
 1879 0398 0095     		str	r5, [sp]
ARM GAS  /tmp/ccy0i7s0.s 			page 33


 1880 039a 0194     		str	r4, [sp, #4]
 1881 039c FFF7FEFF 		bl	LCD_Draw_Text
 1882 03a0 FFF7FEFF 		bl	keyScan
 1883 03a4 FFF7FEFF 		bl	printNum16_2
 1884 03a8 1C21     		movs	r1, #28
 1885 03aa 0095     		str	r5, [sp]
 1886 03ac 0194     		str	r4, [sp, #4]
 1887 03ae 0A46     		mov	r2, r1
 1888 03b0 0023     		movs	r3, #0
 1889 03b2 FFF7FEFF 		bl	LCD_Draw_Text
 1890 03b6 39B0     		add	sp, sp, #228
 1891              		@ sp needed
 1892 03b8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1893              	.L290:
 1894              		.align	2
 1895              	.L289:
 1896 03bc 00000000 		.word	.LANCHOR11
 1897 03c0 13000000 		.word	.LC3
 1898 03c4 1E000000 		.word	.LC4
 1899 03c8 29000000 		.word	.LC5
 1900 03cc 34000000 		.word	.LC6
 1901 03d0 3F000000 		.word	.LC7
 1903              		.global	inPause
 1904              		.global	dtickperv
 1905              		.global	tickperv
 1906              		.global	flagg
 1907              		.comm	SD_Path,4,1
 1908              		.comm	SD_FatFs,560,4
 1909              		.global	timeTick
 1910              		.comm	Lines,6336,4
 1911              		.comm	Blocks,2640,2
 1912              		.global	Kempston
 1913              		.global	IsPressed
 1914              		.global	joystickMode
 1915              		.comm	ATTR_RAM_MOD,96,1
 1916              		.comm	ATTR_RAM,768,1
 1917              		.comm	VIDEO_RAM,6144,1
 1918              		.comm	border,2,2
 1919              		.section	.bss.buffer.7674,"aw",%nobits
 1920              		.set	.LANCHOR6,. + 0
 1923              	buffer.7674:
 1924 0000 000000   		.space	3
 1925              		.section	.data.old_border.7887,"aw",%progbits
 1926              		.align	1
 1927              		.set	.LANCHOR11,. + 0
 1930              	old_border.7887:
 1931 0000 FFFF     		.short	-1
 1932              		.section	.data.tickperv,"aw",%progbits
 1933              		.align	2
 1934              		.set	.LANCHOR10,. + 0
 1937              	tickperv:
 1938 0000 18FCFFFF 		.word	-1000
 1939              		.section	.bss.inPause,"aw",%nobits
 1940              		.align	2
 1941              		.set	.LANCHOR9,. + 0
 1944              	inPause:
 1945 0000 00000000 		.space	4
ARM GAS  /tmp/ccy0i7s0.s 			page 34


 1946              		.section	.bss.joystickMode,"aw",%nobits
 1947              		.align	2
 1948              		.set	.LANCHOR2,. + 0
 1951              	joystickMode:
 1952 0000 00000000 		.space	4
 1953              		.section	.bss.Kempston,"aw",%nobits
 1954              		.set	.LANCHOR1,. + 0
 1957              	Kempston:
 1958 0000 00       		.space	1
 1959              		.section	.bss.dtickperv,"aw",%nobits
 1960              		.align	2
 1963              	dtickperv:
 1964 0000 00000000 		.space	4
 1965              		.section	.data.IsPressed,"aw",%progbits
 1966              		.set	.LANCHOR0,. + 0
 1969              	IsPressed:
 1970 0000 FF       		.byte	-1
 1971 0001 FF       		.byte	-1
 1972 0002 FF       		.byte	-1
 1973 0003 FF       		.byte	-1
 1974 0004 FF       		.byte	-1
 1975 0005 FF       		.byte	-1
 1976 0006 FF       		.byte	-1
 1977 0007 FF       		.byte	-1
 1978              		.section	.bss.buffer.7648,"aw",%nobits
 1979              		.set	.LANCHOR3,. + 0
 1982              	buffer.7648:
 1983 0000 00000000 		.space	32
 1983      00000000 
 1983      00000000 
 1983      00000000 
 1983      00000000 
 1984              		.section	.bss.timeTick,"aw",%nobits
 1985              		.align	2
 1986              		.set	.LANCHOR7,. + 0
 1989              	timeTick:
 1990 0000 00000000 		.space	4
 1991              		.section	.rodata.str1.1,"aMS",%progbits,1
 1992              	.LC0:
 1993 0000 4F4B00   		.ascii	"OK\000"
 1994              	.LC1:
 1995 0003 4D656D6F 		.ascii	"Memory Error\000"
 1995      72792045 
 1995      72726F72 
 1995      00
 1996              	.LC2:
 1997 0010 535000   		.ascii	"SP\000"
 1998              	.LC3:
 1999 0013 20437572 		.ascii	" Cursor   \000"
 1999      736F7220 
 1999      202000
 2000              	.LC4:
 2001 001e 53696E63 		.ascii	"Sinclair 1\000"
 2001      6C616972 
 2001      203100
 2002              	.LC5:
 2003 0029 53696E63 		.ascii	"Sinclair 2\000"
ARM GAS  /tmp/ccy0i7s0.s 			page 35


 2003      6C616972 
 2003      203200
 2004              	.LC6:
 2005 0034 20415A51 		.ascii	" AZQW     \000"
 2005      57202020 
 2005      202000
 2006              	.LC7:
 2007 003f 4B656D70 		.ascii	"Kempston  \000"
 2007      73746F6E 
 2007      202000
 2008              		.section	.bss.buffer.7657,"aw",%nobits
 2009              		.set	.LANCHOR4,. + 0
 2012              	buffer.7657:
 2013 0000 00000000 		.space	32
 2013      00000000 
 2013      00000000 
 2013      00000000 
 2013      00000000 
 2014              		.section	.data.flagg,"aw",%progbits
 2015              		.align	2
 2016              		.set	.LANCHOR8,. + 0
 2019              	flagg:
 2020 0000 01000000 		.word	1
 2021              		.section	.bss.buffer.7665,"aw",%nobits
 2022              		.set	.LANCHOR5,. + 0
 2025              	buffer.7665:
 2026 0000 00000000 		.space	16
 2026      00000000 
 2026      00000000 
 2026      00000000 
 2027              		.ident	"GCC: (15:4.9.3+svn231177-1) 4.9.3 20150529 (prerelease)"
ARM GAS  /tmp/ccy0i7s0.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 smain.c
     /tmp/ccy0i7s0.s:16     .text.clearAttr:0000000000000000 $t
     /tmp/ccy0i7s0.s:21     .text.clearAttr:0000000000000000 clearAttr
     /tmp/ccy0i7s0.s:37     .text.clearAttr:0000000000000010 $d
                            *COM*:0000000000000060 ATTR_RAM_MOD
     /tmp/ccy0i7s0.s:40     .text.setAttr:0000000000000000 $t
     /tmp/ccy0i7s0.s:45     .text.setAttr:0000000000000000 setAttr
     /tmp/ccy0i7s0.s:61     .text.setAttr:0000000000000010 $d
     /tmp/ccy0i7s0.s:64     .text.clearKeys:0000000000000000 $t
     /tmp/ccy0i7s0.s:69     .text.clearKeys:0000000000000000 clearKeys
     /tmp/ccy0i7s0.s:87     .text.clearKeys:0000000000000018 $d
     /tmp/ccy0i7s0.s:90     .text.setRes:0000000000000000 $t
     /tmp/ccy0i7s0.s:95     .text.setRes:0000000000000000 setRes
     /tmp/ccy0i7s0.s:116    .text.setRes:000000000000001c $d
     /tmp/ccy0i7s0.s:119    .text.keyScan:0000000000000000 $t
     /tmp/ccy0i7s0.s:124    .text.keyScan:0000000000000000 keyScan
     /tmp/ccy0i7s0.s:257    .text.keyScan:000000000000014c $d
     /tmp/ccy0i7s0.s:262    .text.in:0000000000000000 $t
     /tmp/ccy0i7s0.s:267    .text.in:0000000000000000 in
     /tmp/ccy0i7s0.s:304    .text.in:0000000000000044 $d
     /tmp/ccy0i7s0.s:308    .text.out:0000000000000000 $t
     /tmp/ccy0i7s0.s:313    .text.out:0000000000000000 out
     /tmp/ccy0i7s0.s:333    .text.out:0000000000000020 $d
                            *COM*:0000000000000002 border
     /tmp/ccy0i7s0.s:337    .text.printNum:0000000000000000 $t
     /tmp/ccy0i7s0.s:342    .text.printNum:0000000000000000 printNum
     /tmp/ccy0i7s0.s:382    .text.printNum:000000000000004c $d
     /tmp/ccy0i7s0.s:386    .text.printNumU:0000000000000000 $t
     /tmp/ccy0i7s0.s:391    .text.printNumU:0000000000000000 printNumU
     /tmp/ccy0i7s0.s:431    .text.printNumU:000000000000004c $d
     /tmp/ccy0i7s0.s:434    .text.printNum16:0000000000000000 $t
     /tmp/ccy0i7s0.s:439    .text.printNum16:0000000000000000 printNum16
     /tmp/ccy0i7s0.s:470    .text.printNum16:0000000000000030 $d
     /tmp/ccy0i7s0.s:473    .text.printNum16_2:0000000000000000 $t
     /tmp/ccy0i7s0.s:478    .text.printNum16_2:0000000000000000 printNum16_2
     /tmp/ccy0i7s0.s:496    .text.printNum16_2:000000000000001c $d
     /tmp/ccy0i7s0.s:499    .text.paintCross:0000000000000000 $t
     /tmp/ccy0i7s0.s:504    .text.paintCross:0000000000000000 paintCross
     /tmp/ccy0i7s0.s:535    .text.clearFullScreen:0000000000000000 $t
     /tmp/ccy0i7s0.s:540    .text.clearFullScreen:0000000000000000 clearFullScreen
     /tmp/ccy0i7s0.s:558    .text.initBlocksAndLines:0000000000000000 $t
     /tmp/ccy0i7s0.s:563    .text.initBlocksAndLines:0000000000000000 initBlocksAndLines
     /tmp/ccy0i7s0.s:632    .text.initBlocksAndLines:000000000000007c $d
                            *COM*:0000000000000a50 Blocks
                            *COM*:00000000000018c0 Lines
     /tmp/ccy0i7s0.s:636    .text.findOldestLine:0000000000000000 $t
     /tmp/ccy0i7s0.s:641    .text.findOldestLine:0000000000000000 findOldestLine
     /tmp/ccy0i7s0.s:668    .text.findOldestLine:000000000000002c $d
     /tmp/ccy0i7s0.s:672    .text.writeCache64bIfmodified:0000000000000000 $t
     /tmp/ccy0i7s0.s:677    .text.writeCache64bIfmodified:0000000000000000 writeCache64bIfmodified
     /tmp/ccy0i7s0.s:701    .text.writeCache64bIfmodified:0000000000000028 $d
     /tmp/ccy0i7s0.s:704    .text.readCache64b:0000000000000000 $t
     /tmp/ccy0i7s0.s:709    .text.readCache64b:0000000000000000 readCache64b
     /tmp/ccy0i7s0.s:729    .text.readCache64b:0000000000000024 $d
     /tmp/ccy0i7s0.s:732    .text.readByte:0000000000000000 $t
     /tmp/ccy0i7s0.s:737    .text.readByte:0000000000000000 readByte
ARM GAS  /tmp/ccy0i7s0.s 			page 37


     /tmp/ccy0i7s0.s:780    .text.readByte:000000000000006c $d
     /tmp/ccy0i7s0.s:785    .text.peek:0000000000000000 $t
     /tmp/ccy0i7s0.s:790    .text.peek:0000000000000000 peek
     /tmp/ccy0i7s0.s:816    .text.peek:0000000000000028 $d
                            *COM*:0000000000001800 VIDEO_RAM
                            *COM*:0000000000000300 ATTR_RAM
     /tmp/ccy0i7s0.s:821    .text.peek16:0000000000000000 $t
     /tmp/ccy0i7s0.s:826    .text.peek16:0000000000000000 peek16
     /tmp/ccy0i7s0.s:842    .text.writeByte:0000000000000000 $t
     /tmp/ccy0i7s0.s:847    .text.writeByte:0000000000000000 writeByte
     /tmp/ccy0i7s0.s:900    .text.writeByte:000000000000007c $d
     /tmp/ccy0i7s0.s:905    .text.poke:0000000000000000 $t
     /tmp/ccy0i7s0.s:910    .text.poke:0000000000000000 poke
     /tmp/ccy0i7s0.s:958    .text.poke:0000000000000064 $d
     /tmp/ccy0i7s0.s:963    .text.poke16:0000000000000000 $t
     /tmp/ccy0i7s0.s:968    .text.poke16:0000000000000000 poke16
     /tmp/ccy0i7s0.s:983    .text.wait_any_key:0000000000000000 $t
     /tmp/ccy0i7s0.s:988    .text.wait_any_key:0000000000000000 wait_any_key
     /tmp/ccy0i7s0.s:999    .text.memory_test:0000000000000000 $t
     /tmp/ccy0i7s0.s:1004   .text.memory_test:0000000000000000 memory_test
     /tmp/ccy0i7s0.s:1183   .text.memory_test:00000000000001b0 $d
     /tmp/ccy0i7s0.s:1188   .text.readCard:0000000000000000 $t
     /tmp/ccy0i7s0.s:1193   .text.readCard:0000000000000000 readCard
     /tmp/ccy0i7s0.s:1449   .text.readCard:000000000000026c $d
                            *COM*:0000000000000004 SD_Path
                            *COM*:0000000000000230 SD_FatFs
     /tmp/ccy0i7s0.s:1458   .text.minit:0000000000000000 $t
     /tmp/ccy0i7s0.s:1463   .text.minit:0000000000000000 minit
     /tmp/ccy0i7s0.s:1496   .text.mloop:0000000000000000 $t
     /tmp/ccy0i7s0.s:1501   .text.mloop:0000000000000000 mloop
     /tmp/ccy0i7s0.s:1798   .text.mloop:00000000000002d8 $d
     /tmp/ccy0i7s0.s:1814   .text.mloop:0000000000000314 $t
     /tmp/ccy0i7s0.s:1896   .text.mloop:00000000000003bc $d
     /tmp/ccy0i7s0.s:1944   .bss.inPause:0000000000000000 inPause
     /tmp/ccy0i7s0.s:1963   .bss.dtickperv:0000000000000000 dtickperv
     /tmp/ccy0i7s0.s:1937   .data.tickperv:0000000000000000 tickperv
     /tmp/ccy0i7s0.s:2019   .data.flagg:0000000000000000 flagg
     /tmp/ccy0i7s0.s:1989   .bss.timeTick:0000000000000000 timeTick
     /tmp/ccy0i7s0.s:1957   .bss.Kempston:0000000000000000 Kempston
     /tmp/ccy0i7s0.s:1969   .data.IsPressed:0000000000000000 IsPressed
     /tmp/ccy0i7s0.s:1951   .bss.joystickMode:0000000000000000 joystickMode
     /tmp/ccy0i7s0.s:1923   .bss.buffer.7674:0000000000000000 buffer.7674
     /tmp/ccy0i7s0.s:1924   .bss.buffer.7674:0000000000000000 $d
     /tmp/ccy0i7s0.s:1926   .data.old_border.7887:0000000000000000 $d
     /tmp/ccy0i7s0.s:1930   .data.old_border.7887:0000000000000000 old_border.7887
     /tmp/ccy0i7s0.s:1933   .data.tickperv:0000000000000000 $d
     /tmp/ccy0i7s0.s:1940   .bss.inPause:0000000000000000 $d
     /tmp/ccy0i7s0.s:1947   .bss.joystickMode:0000000000000000 $d
     /tmp/ccy0i7s0.s:1958   .bss.Kempston:0000000000000000 $d
     /tmp/ccy0i7s0.s:1960   .bss.dtickperv:0000000000000000 $d
     /tmp/ccy0i7s0.s:1982   .bss.buffer.7648:0000000000000000 buffer.7648
     /tmp/ccy0i7s0.s:1983   .bss.buffer.7648:0000000000000000 $d
     /tmp/ccy0i7s0.s:1985   .bss.timeTick:0000000000000000 $d
     /tmp/ccy0i7s0.s:2012   .bss.buffer.7657:0000000000000000 buffer.7657
     /tmp/ccy0i7s0.s:2013   .bss.buffer.7657:0000000000000000 $d
     /tmp/ccy0i7s0.s:2015   .data.flagg:0000000000000000 $d
     /tmp/ccy0i7s0.s:2025   .bss.buffer.7665:0000000000000000 buffer.7665
ARM GAS  /tmp/ccy0i7s0.s 			page 38


     /tmp/ccy0i7s0.s:2026   .bss.buffer.7665:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
LCD_fillRect
LCD_getWidth
LCD_getHeight
LCD_Write64bytes
LCD_Read64bytes
ROM
TP_Touchpad_Pressed
LCD_Draw_Text
HAL_Delay
FATFS_LinkDriver
BSP_SD_Init
f_mount
f_opendir
f_readdir
strncasecmp
f_open
f_read
LCD_FullRect6
f_close
f_closedir
FATFS_UnLinkDriver
TP_Read_Coordinates
SD_Driver
reg
reg_
IFlags
LCD_init
LCD_setOrientation
TP_init_default
z80_reset
HAL_GetTick
z80_run
HAL_SPI_DeInit
MX_SPI1_Init
LCD_FullRect3
LCD_Write8x8line
SPIx_Error1
tstates
interrupts_enabled_at
hspi1
